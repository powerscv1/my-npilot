#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1661342885356962876) {
   out_1661342885356962876[0] = 0;
   out_1661342885356962876[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1661342885356962876[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1661342885356962876[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1661342885356962876[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1661342885356962876[5] = -sin(in_vec[1]);
   out_1661342885356962876[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1661342885356962876[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1661342885356962876[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1661342885356962876[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1661342885356962876[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1661342885356962876[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1661342885356962876[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1661342885356962876[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1661342885356962876[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1661342885356962876[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1661342885356962876[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1661342885356962876[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2279440072678078976) {
   out_2279440072678078976[0] = delta_x[0] + nom_x[0];
   out_2279440072678078976[1] = delta_x[1] + nom_x[1];
   out_2279440072678078976[2] = delta_x[2] + nom_x[2];
   out_2279440072678078976[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2279440072678078976[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2279440072678078976[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2279440072678078976[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2279440072678078976[7] = delta_x[6] + nom_x[7];
   out_2279440072678078976[8] = delta_x[7] + nom_x[8];
   out_2279440072678078976[9] = delta_x[8] + nom_x[9];
   out_2279440072678078976[10] = delta_x[9] + nom_x[10];
   out_2279440072678078976[11] = delta_x[10] + nom_x[11];
   out_2279440072678078976[12] = delta_x[11] + nom_x[12];
   out_2279440072678078976[13] = delta_x[12] + nom_x[13];
   out_2279440072678078976[14] = delta_x[13] + nom_x[14];
   out_2279440072678078976[15] = delta_x[14] + nom_x[15];
   out_2279440072678078976[16] = delta_x[15] + nom_x[16];
   out_2279440072678078976[17] = delta_x[16] + nom_x[17];
   out_2279440072678078976[18] = delta_x[17] + nom_x[18];
   out_2279440072678078976[19] = delta_x[18] + nom_x[19];
   out_2279440072678078976[20] = delta_x[19] + nom_x[20];
   out_2279440072678078976[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5203322416787072396) {
   out_5203322416787072396[0] = -nom_x[0] + true_x[0];
   out_5203322416787072396[1] = -nom_x[1] + true_x[1];
   out_5203322416787072396[2] = -nom_x[2] + true_x[2];
   out_5203322416787072396[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5203322416787072396[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5203322416787072396[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5203322416787072396[6] = -nom_x[7] + true_x[7];
   out_5203322416787072396[7] = -nom_x[8] + true_x[8];
   out_5203322416787072396[8] = -nom_x[9] + true_x[9];
   out_5203322416787072396[9] = -nom_x[10] + true_x[10];
   out_5203322416787072396[10] = -nom_x[11] + true_x[11];
   out_5203322416787072396[11] = -nom_x[12] + true_x[12];
   out_5203322416787072396[12] = -nom_x[13] + true_x[13];
   out_5203322416787072396[13] = -nom_x[14] + true_x[14];
   out_5203322416787072396[14] = -nom_x[15] + true_x[15];
   out_5203322416787072396[15] = -nom_x[16] + true_x[16];
   out_5203322416787072396[16] = -nom_x[17] + true_x[17];
   out_5203322416787072396[17] = -nom_x[18] + true_x[18];
   out_5203322416787072396[18] = -nom_x[19] + true_x[19];
   out_5203322416787072396[19] = -nom_x[20] + true_x[20];
   out_5203322416787072396[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7445739159746980786) {
   out_7445739159746980786[0] = 1.0;
   out_7445739159746980786[1] = 0;
   out_7445739159746980786[2] = 0;
   out_7445739159746980786[3] = 0;
   out_7445739159746980786[4] = 0;
   out_7445739159746980786[5] = 0;
   out_7445739159746980786[6] = 0;
   out_7445739159746980786[7] = 0;
   out_7445739159746980786[8] = 0;
   out_7445739159746980786[9] = 0;
   out_7445739159746980786[10] = 0;
   out_7445739159746980786[11] = 0;
   out_7445739159746980786[12] = 0;
   out_7445739159746980786[13] = 0;
   out_7445739159746980786[14] = 0;
   out_7445739159746980786[15] = 0;
   out_7445739159746980786[16] = 0;
   out_7445739159746980786[17] = 0;
   out_7445739159746980786[18] = 0;
   out_7445739159746980786[19] = 0;
   out_7445739159746980786[20] = 0;
   out_7445739159746980786[21] = 0;
   out_7445739159746980786[22] = 1.0;
   out_7445739159746980786[23] = 0;
   out_7445739159746980786[24] = 0;
   out_7445739159746980786[25] = 0;
   out_7445739159746980786[26] = 0;
   out_7445739159746980786[27] = 0;
   out_7445739159746980786[28] = 0;
   out_7445739159746980786[29] = 0;
   out_7445739159746980786[30] = 0;
   out_7445739159746980786[31] = 0;
   out_7445739159746980786[32] = 0;
   out_7445739159746980786[33] = 0;
   out_7445739159746980786[34] = 0;
   out_7445739159746980786[35] = 0;
   out_7445739159746980786[36] = 0;
   out_7445739159746980786[37] = 0;
   out_7445739159746980786[38] = 0;
   out_7445739159746980786[39] = 0;
   out_7445739159746980786[40] = 0;
   out_7445739159746980786[41] = 0;
   out_7445739159746980786[42] = 0;
   out_7445739159746980786[43] = 0;
   out_7445739159746980786[44] = 1.0;
   out_7445739159746980786[45] = 0;
   out_7445739159746980786[46] = 0;
   out_7445739159746980786[47] = 0;
   out_7445739159746980786[48] = 0;
   out_7445739159746980786[49] = 0;
   out_7445739159746980786[50] = 0;
   out_7445739159746980786[51] = 0;
   out_7445739159746980786[52] = 0;
   out_7445739159746980786[53] = 0;
   out_7445739159746980786[54] = 0;
   out_7445739159746980786[55] = 0;
   out_7445739159746980786[56] = 0;
   out_7445739159746980786[57] = 0;
   out_7445739159746980786[58] = 0;
   out_7445739159746980786[59] = 0;
   out_7445739159746980786[60] = 0;
   out_7445739159746980786[61] = 0;
   out_7445739159746980786[62] = 0;
   out_7445739159746980786[63] = 0;
   out_7445739159746980786[64] = 0;
   out_7445739159746980786[65] = 0;
   out_7445739159746980786[66] = -0.5*state[4];
   out_7445739159746980786[67] = -0.5*state[5];
   out_7445739159746980786[68] = -0.5*state[6];
   out_7445739159746980786[69] = 0;
   out_7445739159746980786[70] = 0;
   out_7445739159746980786[71] = 0;
   out_7445739159746980786[72] = 0;
   out_7445739159746980786[73] = 0;
   out_7445739159746980786[74] = 0;
   out_7445739159746980786[75] = 0;
   out_7445739159746980786[76] = 0;
   out_7445739159746980786[77] = 0;
   out_7445739159746980786[78] = 0;
   out_7445739159746980786[79] = 0;
   out_7445739159746980786[80] = 0;
   out_7445739159746980786[81] = 0;
   out_7445739159746980786[82] = 0;
   out_7445739159746980786[83] = 0;
   out_7445739159746980786[84] = 0;
   out_7445739159746980786[85] = 0;
   out_7445739159746980786[86] = 0;
   out_7445739159746980786[87] = 0.5*state[3];
   out_7445739159746980786[88] = 0.5*state[6];
   out_7445739159746980786[89] = -0.5*state[5];
   out_7445739159746980786[90] = 0;
   out_7445739159746980786[91] = 0;
   out_7445739159746980786[92] = 0;
   out_7445739159746980786[93] = 0;
   out_7445739159746980786[94] = 0;
   out_7445739159746980786[95] = 0;
   out_7445739159746980786[96] = 0;
   out_7445739159746980786[97] = 0;
   out_7445739159746980786[98] = 0;
   out_7445739159746980786[99] = 0;
   out_7445739159746980786[100] = 0;
   out_7445739159746980786[101] = 0;
   out_7445739159746980786[102] = 0;
   out_7445739159746980786[103] = 0;
   out_7445739159746980786[104] = 0;
   out_7445739159746980786[105] = 0;
   out_7445739159746980786[106] = 0;
   out_7445739159746980786[107] = 0;
   out_7445739159746980786[108] = -0.5*state[6];
   out_7445739159746980786[109] = 0.5*state[3];
   out_7445739159746980786[110] = 0.5*state[4];
   out_7445739159746980786[111] = 0;
   out_7445739159746980786[112] = 0;
   out_7445739159746980786[113] = 0;
   out_7445739159746980786[114] = 0;
   out_7445739159746980786[115] = 0;
   out_7445739159746980786[116] = 0;
   out_7445739159746980786[117] = 0;
   out_7445739159746980786[118] = 0;
   out_7445739159746980786[119] = 0;
   out_7445739159746980786[120] = 0;
   out_7445739159746980786[121] = 0;
   out_7445739159746980786[122] = 0;
   out_7445739159746980786[123] = 0;
   out_7445739159746980786[124] = 0;
   out_7445739159746980786[125] = 0;
   out_7445739159746980786[126] = 0;
   out_7445739159746980786[127] = 0;
   out_7445739159746980786[128] = 0;
   out_7445739159746980786[129] = 0.5*state[5];
   out_7445739159746980786[130] = -0.5*state[4];
   out_7445739159746980786[131] = 0.5*state[3];
   out_7445739159746980786[132] = 0;
   out_7445739159746980786[133] = 0;
   out_7445739159746980786[134] = 0;
   out_7445739159746980786[135] = 0;
   out_7445739159746980786[136] = 0;
   out_7445739159746980786[137] = 0;
   out_7445739159746980786[138] = 0;
   out_7445739159746980786[139] = 0;
   out_7445739159746980786[140] = 0;
   out_7445739159746980786[141] = 0;
   out_7445739159746980786[142] = 0;
   out_7445739159746980786[143] = 0;
   out_7445739159746980786[144] = 0;
   out_7445739159746980786[145] = 0;
   out_7445739159746980786[146] = 0;
   out_7445739159746980786[147] = 0;
   out_7445739159746980786[148] = 0;
   out_7445739159746980786[149] = 0;
   out_7445739159746980786[150] = 0;
   out_7445739159746980786[151] = 0;
   out_7445739159746980786[152] = 0;
   out_7445739159746980786[153] = 1.0;
   out_7445739159746980786[154] = 0;
   out_7445739159746980786[155] = 0;
   out_7445739159746980786[156] = 0;
   out_7445739159746980786[157] = 0;
   out_7445739159746980786[158] = 0;
   out_7445739159746980786[159] = 0;
   out_7445739159746980786[160] = 0;
   out_7445739159746980786[161] = 0;
   out_7445739159746980786[162] = 0;
   out_7445739159746980786[163] = 0;
   out_7445739159746980786[164] = 0;
   out_7445739159746980786[165] = 0;
   out_7445739159746980786[166] = 0;
   out_7445739159746980786[167] = 0;
   out_7445739159746980786[168] = 0;
   out_7445739159746980786[169] = 0;
   out_7445739159746980786[170] = 0;
   out_7445739159746980786[171] = 0;
   out_7445739159746980786[172] = 0;
   out_7445739159746980786[173] = 0;
   out_7445739159746980786[174] = 0;
   out_7445739159746980786[175] = 1.0;
   out_7445739159746980786[176] = 0;
   out_7445739159746980786[177] = 0;
   out_7445739159746980786[178] = 0;
   out_7445739159746980786[179] = 0;
   out_7445739159746980786[180] = 0;
   out_7445739159746980786[181] = 0;
   out_7445739159746980786[182] = 0;
   out_7445739159746980786[183] = 0;
   out_7445739159746980786[184] = 0;
   out_7445739159746980786[185] = 0;
   out_7445739159746980786[186] = 0;
   out_7445739159746980786[187] = 0;
   out_7445739159746980786[188] = 0;
   out_7445739159746980786[189] = 0;
   out_7445739159746980786[190] = 0;
   out_7445739159746980786[191] = 0;
   out_7445739159746980786[192] = 0;
   out_7445739159746980786[193] = 0;
   out_7445739159746980786[194] = 0;
   out_7445739159746980786[195] = 0;
   out_7445739159746980786[196] = 0;
   out_7445739159746980786[197] = 1.0;
   out_7445739159746980786[198] = 0;
   out_7445739159746980786[199] = 0;
   out_7445739159746980786[200] = 0;
   out_7445739159746980786[201] = 0;
   out_7445739159746980786[202] = 0;
   out_7445739159746980786[203] = 0;
   out_7445739159746980786[204] = 0;
   out_7445739159746980786[205] = 0;
   out_7445739159746980786[206] = 0;
   out_7445739159746980786[207] = 0;
   out_7445739159746980786[208] = 0;
   out_7445739159746980786[209] = 0;
   out_7445739159746980786[210] = 0;
   out_7445739159746980786[211] = 0;
   out_7445739159746980786[212] = 0;
   out_7445739159746980786[213] = 0;
   out_7445739159746980786[214] = 0;
   out_7445739159746980786[215] = 0;
   out_7445739159746980786[216] = 0;
   out_7445739159746980786[217] = 0;
   out_7445739159746980786[218] = 0;
   out_7445739159746980786[219] = 1.0;
   out_7445739159746980786[220] = 0;
   out_7445739159746980786[221] = 0;
   out_7445739159746980786[222] = 0;
   out_7445739159746980786[223] = 0;
   out_7445739159746980786[224] = 0;
   out_7445739159746980786[225] = 0;
   out_7445739159746980786[226] = 0;
   out_7445739159746980786[227] = 0;
   out_7445739159746980786[228] = 0;
   out_7445739159746980786[229] = 0;
   out_7445739159746980786[230] = 0;
   out_7445739159746980786[231] = 0;
   out_7445739159746980786[232] = 0;
   out_7445739159746980786[233] = 0;
   out_7445739159746980786[234] = 0;
   out_7445739159746980786[235] = 0;
   out_7445739159746980786[236] = 0;
   out_7445739159746980786[237] = 0;
   out_7445739159746980786[238] = 0;
   out_7445739159746980786[239] = 0;
   out_7445739159746980786[240] = 0;
   out_7445739159746980786[241] = 1.0;
   out_7445739159746980786[242] = 0;
   out_7445739159746980786[243] = 0;
   out_7445739159746980786[244] = 0;
   out_7445739159746980786[245] = 0;
   out_7445739159746980786[246] = 0;
   out_7445739159746980786[247] = 0;
   out_7445739159746980786[248] = 0;
   out_7445739159746980786[249] = 0;
   out_7445739159746980786[250] = 0;
   out_7445739159746980786[251] = 0;
   out_7445739159746980786[252] = 0;
   out_7445739159746980786[253] = 0;
   out_7445739159746980786[254] = 0;
   out_7445739159746980786[255] = 0;
   out_7445739159746980786[256] = 0;
   out_7445739159746980786[257] = 0;
   out_7445739159746980786[258] = 0;
   out_7445739159746980786[259] = 0;
   out_7445739159746980786[260] = 0;
   out_7445739159746980786[261] = 0;
   out_7445739159746980786[262] = 0;
   out_7445739159746980786[263] = 1.0;
   out_7445739159746980786[264] = 0;
   out_7445739159746980786[265] = 0;
   out_7445739159746980786[266] = 0;
   out_7445739159746980786[267] = 0;
   out_7445739159746980786[268] = 0;
   out_7445739159746980786[269] = 0;
   out_7445739159746980786[270] = 0;
   out_7445739159746980786[271] = 0;
   out_7445739159746980786[272] = 0;
   out_7445739159746980786[273] = 0;
   out_7445739159746980786[274] = 0;
   out_7445739159746980786[275] = 0;
   out_7445739159746980786[276] = 0;
   out_7445739159746980786[277] = 0;
   out_7445739159746980786[278] = 0;
   out_7445739159746980786[279] = 0;
   out_7445739159746980786[280] = 0;
   out_7445739159746980786[281] = 0;
   out_7445739159746980786[282] = 0;
   out_7445739159746980786[283] = 0;
   out_7445739159746980786[284] = 0;
   out_7445739159746980786[285] = 1.0;
   out_7445739159746980786[286] = 0;
   out_7445739159746980786[287] = 0;
   out_7445739159746980786[288] = 0;
   out_7445739159746980786[289] = 0;
   out_7445739159746980786[290] = 0;
   out_7445739159746980786[291] = 0;
   out_7445739159746980786[292] = 0;
   out_7445739159746980786[293] = 0;
   out_7445739159746980786[294] = 0;
   out_7445739159746980786[295] = 0;
   out_7445739159746980786[296] = 0;
   out_7445739159746980786[297] = 0;
   out_7445739159746980786[298] = 0;
   out_7445739159746980786[299] = 0;
   out_7445739159746980786[300] = 0;
   out_7445739159746980786[301] = 0;
   out_7445739159746980786[302] = 0;
   out_7445739159746980786[303] = 0;
   out_7445739159746980786[304] = 0;
   out_7445739159746980786[305] = 0;
   out_7445739159746980786[306] = 0;
   out_7445739159746980786[307] = 1.0;
   out_7445739159746980786[308] = 0;
   out_7445739159746980786[309] = 0;
   out_7445739159746980786[310] = 0;
   out_7445739159746980786[311] = 0;
   out_7445739159746980786[312] = 0;
   out_7445739159746980786[313] = 0;
   out_7445739159746980786[314] = 0;
   out_7445739159746980786[315] = 0;
   out_7445739159746980786[316] = 0;
   out_7445739159746980786[317] = 0;
   out_7445739159746980786[318] = 0;
   out_7445739159746980786[319] = 0;
   out_7445739159746980786[320] = 0;
   out_7445739159746980786[321] = 0;
   out_7445739159746980786[322] = 0;
   out_7445739159746980786[323] = 0;
   out_7445739159746980786[324] = 0;
   out_7445739159746980786[325] = 0;
   out_7445739159746980786[326] = 0;
   out_7445739159746980786[327] = 0;
   out_7445739159746980786[328] = 0;
   out_7445739159746980786[329] = 1.0;
   out_7445739159746980786[330] = 0;
   out_7445739159746980786[331] = 0;
   out_7445739159746980786[332] = 0;
   out_7445739159746980786[333] = 0;
   out_7445739159746980786[334] = 0;
   out_7445739159746980786[335] = 0;
   out_7445739159746980786[336] = 0;
   out_7445739159746980786[337] = 0;
   out_7445739159746980786[338] = 0;
   out_7445739159746980786[339] = 0;
   out_7445739159746980786[340] = 0;
   out_7445739159746980786[341] = 0;
   out_7445739159746980786[342] = 0;
   out_7445739159746980786[343] = 0;
   out_7445739159746980786[344] = 0;
   out_7445739159746980786[345] = 0;
   out_7445739159746980786[346] = 0;
   out_7445739159746980786[347] = 0;
   out_7445739159746980786[348] = 0;
   out_7445739159746980786[349] = 0;
   out_7445739159746980786[350] = 0;
   out_7445739159746980786[351] = 1.0;
   out_7445739159746980786[352] = 0;
   out_7445739159746980786[353] = 0;
   out_7445739159746980786[354] = 0;
   out_7445739159746980786[355] = 0;
   out_7445739159746980786[356] = 0;
   out_7445739159746980786[357] = 0;
   out_7445739159746980786[358] = 0;
   out_7445739159746980786[359] = 0;
   out_7445739159746980786[360] = 0;
   out_7445739159746980786[361] = 0;
   out_7445739159746980786[362] = 0;
   out_7445739159746980786[363] = 0;
   out_7445739159746980786[364] = 0;
   out_7445739159746980786[365] = 0;
   out_7445739159746980786[366] = 0;
   out_7445739159746980786[367] = 0;
   out_7445739159746980786[368] = 0;
   out_7445739159746980786[369] = 0;
   out_7445739159746980786[370] = 0;
   out_7445739159746980786[371] = 0;
   out_7445739159746980786[372] = 0;
   out_7445739159746980786[373] = 1.0;
   out_7445739159746980786[374] = 0;
   out_7445739159746980786[375] = 0;
   out_7445739159746980786[376] = 0;
   out_7445739159746980786[377] = 0;
   out_7445739159746980786[378] = 0;
   out_7445739159746980786[379] = 0;
   out_7445739159746980786[380] = 0;
   out_7445739159746980786[381] = 0;
   out_7445739159746980786[382] = 0;
   out_7445739159746980786[383] = 0;
   out_7445739159746980786[384] = 0;
   out_7445739159746980786[385] = 0;
   out_7445739159746980786[386] = 0;
   out_7445739159746980786[387] = 0;
   out_7445739159746980786[388] = 0;
   out_7445739159746980786[389] = 0;
   out_7445739159746980786[390] = 0;
   out_7445739159746980786[391] = 0;
   out_7445739159746980786[392] = 0;
   out_7445739159746980786[393] = 0;
   out_7445739159746980786[394] = 0;
   out_7445739159746980786[395] = 1.0;
   out_7445739159746980786[396] = 0;
   out_7445739159746980786[397] = 0;
   out_7445739159746980786[398] = 0;
   out_7445739159746980786[399] = 0;
   out_7445739159746980786[400] = 0;
   out_7445739159746980786[401] = 0;
   out_7445739159746980786[402] = 0;
   out_7445739159746980786[403] = 0;
   out_7445739159746980786[404] = 0;
   out_7445739159746980786[405] = 0;
   out_7445739159746980786[406] = 0;
   out_7445739159746980786[407] = 0;
   out_7445739159746980786[408] = 0;
   out_7445739159746980786[409] = 0;
   out_7445739159746980786[410] = 0;
   out_7445739159746980786[411] = 0;
   out_7445739159746980786[412] = 0;
   out_7445739159746980786[413] = 0;
   out_7445739159746980786[414] = 0;
   out_7445739159746980786[415] = 0;
   out_7445739159746980786[416] = 0;
   out_7445739159746980786[417] = 1.0;
   out_7445739159746980786[418] = 0;
   out_7445739159746980786[419] = 0;
   out_7445739159746980786[420] = 0;
   out_7445739159746980786[421] = 0;
   out_7445739159746980786[422] = 0;
   out_7445739159746980786[423] = 0;
   out_7445739159746980786[424] = 0;
   out_7445739159746980786[425] = 0;
   out_7445739159746980786[426] = 0;
   out_7445739159746980786[427] = 0;
   out_7445739159746980786[428] = 0;
   out_7445739159746980786[429] = 0;
   out_7445739159746980786[430] = 0;
   out_7445739159746980786[431] = 0;
   out_7445739159746980786[432] = 0;
   out_7445739159746980786[433] = 0;
   out_7445739159746980786[434] = 0;
   out_7445739159746980786[435] = 0;
   out_7445739159746980786[436] = 0;
   out_7445739159746980786[437] = 0;
   out_7445739159746980786[438] = 0;
   out_7445739159746980786[439] = 1.0;
   out_7445739159746980786[440] = 0;
   out_7445739159746980786[441] = 0;
   out_7445739159746980786[442] = 0;
   out_7445739159746980786[443] = 0;
   out_7445739159746980786[444] = 0;
   out_7445739159746980786[445] = 0;
   out_7445739159746980786[446] = 0;
   out_7445739159746980786[447] = 0;
   out_7445739159746980786[448] = 0;
   out_7445739159746980786[449] = 0;
   out_7445739159746980786[450] = 0;
   out_7445739159746980786[451] = 0;
   out_7445739159746980786[452] = 0;
   out_7445739159746980786[453] = 0;
   out_7445739159746980786[454] = 0;
   out_7445739159746980786[455] = 0;
   out_7445739159746980786[456] = 0;
   out_7445739159746980786[457] = 0;
   out_7445739159746980786[458] = 0;
   out_7445739159746980786[459] = 0;
   out_7445739159746980786[460] = 0;
   out_7445739159746980786[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8029348862025951388) {
   out_8029348862025951388[0] = dt*state[7] + state[0];
   out_8029348862025951388[1] = dt*state[8] + state[1];
   out_8029348862025951388[2] = dt*state[9] + state[2];
   out_8029348862025951388[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8029348862025951388[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8029348862025951388[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8029348862025951388[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8029348862025951388[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8029348862025951388[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8029348862025951388[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8029348862025951388[10] = state[10];
   out_8029348862025951388[11] = state[11];
   out_8029348862025951388[12] = state[12];
   out_8029348862025951388[13] = state[13];
   out_8029348862025951388[14] = state[14];
   out_8029348862025951388[15] = state[15];
   out_8029348862025951388[16] = state[16];
   out_8029348862025951388[17] = state[17];
   out_8029348862025951388[18] = state[18];
   out_8029348862025951388[19] = state[19];
   out_8029348862025951388[20] = state[20];
   out_8029348862025951388[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4044065417594102198) {
   out_4044065417594102198[0] = 1;
   out_4044065417594102198[1] = 0;
   out_4044065417594102198[2] = 0;
   out_4044065417594102198[3] = 0;
   out_4044065417594102198[4] = 0;
   out_4044065417594102198[5] = 0;
   out_4044065417594102198[6] = dt;
   out_4044065417594102198[7] = 0;
   out_4044065417594102198[8] = 0;
   out_4044065417594102198[9] = 0;
   out_4044065417594102198[10] = 0;
   out_4044065417594102198[11] = 0;
   out_4044065417594102198[12] = 0;
   out_4044065417594102198[13] = 0;
   out_4044065417594102198[14] = 0;
   out_4044065417594102198[15] = 0;
   out_4044065417594102198[16] = 0;
   out_4044065417594102198[17] = 0;
   out_4044065417594102198[18] = 0;
   out_4044065417594102198[19] = 0;
   out_4044065417594102198[20] = 0;
   out_4044065417594102198[21] = 0;
   out_4044065417594102198[22] = 1;
   out_4044065417594102198[23] = 0;
   out_4044065417594102198[24] = 0;
   out_4044065417594102198[25] = 0;
   out_4044065417594102198[26] = 0;
   out_4044065417594102198[27] = 0;
   out_4044065417594102198[28] = dt;
   out_4044065417594102198[29] = 0;
   out_4044065417594102198[30] = 0;
   out_4044065417594102198[31] = 0;
   out_4044065417594102198[32] = 0;
   out_4044065417594102198[33] = 0;
   out_4044065417594102198[34] = 0;
   out_4044065417594102198[35] = 0;
   out_4044065417594102198[36] = 0;
   out_4044065417594102198[37] = 0;
   out_4044065417594102198[38] = 0;
   out_4044065417594102198[39] = 0;
   out_4044065417594102198[40] = 0;
   out_4044065417594102198[41] = 0;
   out_4044065417594102198[42] = 0;
   out_4044065417594102198[43] = 0;
   out_4044065417594102198[44] = 1;
   out_4044065417594102198[45] = 0;
   out_4044065417594102198[46] = 0;
   out_4044065417594102198[47] = 0;
   out_4044065417594102198[48] = 0;
   out_4044065417594102198[49] = 0;
   out_4044065417594102198[50] = dt;
   out_4044065417594102198[51] = 0;
   out_4044065417594102198[52] = 0;
   out_4044065417594102198[53] = 0;
   out_4044065417594102198[54] = 0;
   out_4044065417594102198[55] = 0;
   out_4044065417594102198[56] = 0;
   out_4044065417594102198[57] = 0;
   out_4044065417594102198[58] = 0;
   out_4044065417594102198[59] = 0;
   out_4044065417594102198[60] = 0;
   out_4044065417594102198[61] = 0;
   out_4044065417594102198[62] = 0;
   out_4044065417594102198[63] = 0;
   out_4044065417594102198[64] = 0;
   out_4044065417594102198[65] = 0;
   out_4044065417594102198[66] = 1;
   out_4044065417594102198[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4044065417594102198[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4044065417594102198[69] = 0;
   out_4044065417594102198[70] = 0;
   out_4044065417594102198[71] = 0;
   out_4044065417594102198[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4044065417594102198[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4044065417594102198[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4044065417594102198[75] = 0;
   out_4044065417594102198[76] = 0;
   out_4044065417594102198[77] = 0;
   out_4044065417594102198[78] = 0;
   out_4044065417594102198[79] = 0;
   out_4044065417594102198[80] = 0;
   out_4044065417594102198[81] = 0;
   out_4044065417594102198[82] = 0;
   out_4044065417594102198[83] = 0;
   out_4044065417594102198[84] = 0;
   out_4044065417594102198[85] = 0;
   out_4044065417594102198[86] = 0;
   out_4044065417594102198[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4044065417594102198[88] = 1;
   out_4044065417594102198[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4044065417594102198[90] = 0;
   out_4044065417594102198[91] = 0;
   out_4044065417594102198[92] = 0;
   out_4044065417594102198[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4044065417594102198[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4044065417594102198[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4044065417594102198[96] = 0;
   out_4044065417594102198[97] = 0;
   out_4044065417594102198[98] = 0;
   out_4044065417594102198[99] = 0;
   out_4044065417594102198[100] = 0;
   out_4044065417594102198[101] = 0;
   out_4044065417594102198[102] = 0;
   out_4044065417594102198[103] = 0;
   out_4044065417594102198[104] = 0;
   out_4044065417594102198[105] = 0;
   out_4044065417594102198[106] = 0;
   out_4044065417594102198[107] = 0;
   out_4044065417594102198[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4044065417594102198[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4044065417594102198[110] = 1;
   out_4044065417594102198[111] = 0;
   out_4044065417594102198[112] = 0;
   out_4044065417594102198[113] = 0;
   out_4044065417594102198[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4044065417594102198[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4044065417594102198[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4044065417594102198[117] = 0;
   out_4044065417594102198[118] = 0;
   out_4044065417594102198[119] = 0;
   out_4044065417594102198[120] = 0;
   out_4044065417594102198[121] = 0;
   out_4044065417594102198[122] = 0;
   out_4044065417594102198[123] = 0;
   out_4044065417594102198[124] = 0;
   out_4044065417594102198[125] = 0;
   out_4044065417594102198[126] = 0;
   out_4044065417594102198[127] = 0;
   out_4044065417594102198[128] = 0;
   out_4044065417594102198[129] = 0;
   out_4044065417594102198[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4044065417594102198[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4044065417594102198[132] = 1;
   out_4044065417594102198[133] = 0;
   out_4044065417594102198[134] = 0;
   out_4044065417594102198[135] = 0;
   out_4044065417594102198[136] = 0;
   out_4044065417594102198[137] = 0;
   out_4044065417594102198[138] = 0;
   out_4044065417594102198[139] = 0;
   out_4044065417594102198[140] = 0;
   out_4044065417594102198[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4044065417594102198[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4044065417594102198[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4044065417594102198[144] = 0;
   out_4044065417594102198[145] = 0;
   out_4044065417594102198[146] = 0;
   out_4044065417594102198[147] = 0;
   out_4044065417594102198[148] = 0;
   out_4044065417594102198[149] = 0;
   out_4044065417594102198[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4044065417594102198[151] = 0;
   out_4044065417594102198[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4044065417594102198[153] = 0;
   out_4044065417594102198[154] = 1;
   out_4044065417594102198[155] = 0;
   out_4044065417594102198[156] = 0;
   out_4044065417594102198[157] = 0;
   out_4044065417594102198[158] = 0;
   out_4044065417594102198[159] = 0;
   out_4044065417594102198[160] = 0;
   out_4044065417594102198[161] = 0;
   out_4044065417594102198[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4044065417594102198[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4044065417594102198[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4044065417594102198[165] = 0;
   out_4044065417594102198[166] = 0;
   out_4044065417594102198[167] = 0;
   out_4044065417594102198[168] = 0;
   out_4044065417594102198[169] = 0;
   out_4044065417594102198[170] = 0;
   out_4044065417594102198[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4044065417594102198[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4044065417594102198[173] = 0;
   out_4044065417594102198[174] = 0;
   out_4044065417594102198[175] = 0;
   out_4044065417594102198[176] = 1;
   out_4044065417594102198[177] = 0;
   out_4044065417594102198[178] = 0;
   out_4044065417594102198[179] = 0;
   out_4044065417594102198[180] = 0;
   out_4044065417594102198[181] = 0;
   out_4044065417594102198[182] = 0;
   out_4044065417594102198[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4044065417594102198[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4044065417594102198[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4044065417594102198[186] = 0;
   out_4044065417594102198[187] = 0;
   out_4044065417594102198[188] = 0;
   out_4044065417594102198[189] = 0;
   out_4044065417594102198[190] = 0;
   out_4044065417594102198[191] = 0;
   out_4044065417594102198[192] = 0;
   out_4044065417594102198[193] = 0;
   out_4044065417594102198[194] = 0;
   out_4044065417594102198[195] = 0;
   out_4044065417594102198[196] = 0;
   out_4044065417594102198[197] = 0;
   out_4044065417594102198[198] = 1;
   out_4044065417594102198[199] = 0;
   out_4044065417594102198[200] = 0;
   out_4044065417594102198[201] = 0;
   out_4044065417594102198[202] = 0;
   out_4044065417594102198[203] = 0;
   out_4044065417594102198[204] = 0;
   out_4044065417594102198[205] = 0;
   out_4044065417594102198[206] = 0;
   out_4044065417594102198[207] = 0;
   out_4044065417594102198[208] = 0;
   out_4044065417594102198[209] = 0;
   out_4044065417594102198[210] = 0;
   out_4044065417594102198[211] = 0;
   out_4044065417594102198[212] = 0;
   out_4044065417594102198[213] = 0;
   out_4044065417594102198[214] = 0;
   out_4044065417594102198[215] = 0;
   out_4044065417594102198[216] = 0;
   out_4044065417594102198[217] = 0;
   out_4044065417594102198[218] = 0;
   out_4044065417594102198[219] = 0;
   out_4044065417594102198[220] = 1;
   out_4044065417594102198[221] = 0;
   out_4044065417594102198[222] = 0;
   out_4044065417594102198[223] = 0;
   out_4044065417594102198[224] = 0;
   out_4044065417594102198[225] = 0;
   out_4044065417594102198[226] = 0;
   out_4044065417594102198[227] = 0;
   out_4044065417594102198[228] = 0;
   out_4044065417594102198[229] = 0;
   out_4044065417594102198[230] = 0;
   out_4044065417594102198[231] = 0;
   out_4044065417594102198[232] = 0;
   out_4044065417594102198[233] = 0;
   out_4044065417594102198[234] = 0;
   out_4044065417594102198[235] = 0;
   out_4044065417594102198[236] = 0;
   out_4044065417594102198[237] = 0;
   out_4044065417594102198[238] = 0;
   out_4044065417594102198[239] = 0;
   out_4044065417594102198[240] = 0;
   out_4044065417594102198[241] = 0;
   out_4044065417594102198[242] = 1;
   out_4044065417594102198[243] = 0;
   out_4044065417594102198[244] = 0;
   out_4044065417594102198[245] = 0;
   out_4044065417594102198[246] = 0;
   out_4044065417594102198[247] = 0;
   out_4044065417594102198[248] = 0;
   out_4044065417594102198[249] = 0;
   out_4044065417594102198[250] = 0;
   out_4044065417594102198[251] = 0;
   out_4044065417594102198[252] = 0;
   out_4044065417594102198[253] = 0;
   out_4044065417594102198[254] = 0;
   out_4044065417594102198[255] = 0;
   out_4044065417594102198[256] = 0;
   out_4044065417594102198[257] = 0;
   out_4044065417594102198[258] = 0;
   out_4044065417594102198[259] = 0;
   out_4044065417594102198[260] = 0;
   out_4044065417594102198[261] = 0;
   out_4044065417594102198[262] = 0;
   out_4044065417594102198[263] = 0;
   out_4044065417594102198[264] = 1;
   out_4044065417594102198[265] = 0;
   out_4044065417594102198[266] = 0;
   out_4044065417594102198[267] = 0;
   out_4044065417594102198[268] = 0;
   out_4044065417594102198[269] = 0;
   out_4044065417594102198[270] = 0;
   out_4044065417594102198[271] = 0;
   out_4044065417594102198[272] = 0;
   out_4044065417594102198[273] = 0;
   out_4044065417594102198[274] = 0;
   out_4044065417594102198[275] = 0;
   out_4044065417594102198[276] = 0;
   out_4044065417594102198[277] = 0;
   out_4044065417594102198[278] = 0;
   out_4044065417594102198[279] = 0;
   out_4044065417594102198[280] = 0;
   out_4044065417594102198[281] = 0;
   out_4044065417594102198[282] = 0;
   out_4044065417594102198[283] = 0;
   out_4044065417594102198[284] = 0;
   out_4044065417594102198[285] = 0;
   out_4044065417594102198[286] = 1;
   out_4044065417594102198[287] = 0;
   out_4044065417594102198[288] = 0;
   out_4044065417594102198[289] = 0;
   out_4044065417594102198[290] = 0;
   out_4044065417594102198[291] = 0;
   out_4044065417594102198[292] = 0;
   out_4044065417594102198[293] = 0;
   out_4044065417594102198[294] = 0;
   out_4044065417594102198[295] = 0;
   out_4044065417594102198[296] = 0;
   out_4044065417594102198[297] = 0;
   out_4044065417594102198[298] = 0;
   out_4044065417594102198[299] = 0;
   out_4044065417594102198[300] = 0;
   out_4044065417594102198[301] = 0;
   out_4044065417594102198[302] = 0;
   out_4044065417594102198[303] = 0;
   out_4044065417594102198[304] = 0;
   out_4044065417594102198[305] = 0;
   out_4044065417594102198[306] = 0;
   out_4044065417594102198[307] = 0;
   out_4044065417594102198[308] = 1;
   out_4044065417594102198[309] = 0;
   out_4044065417594102198[310] = 0;
   out_4044065417594102198[311] = 0;
   out_4044065417594102198[312] = 0;
   out_4044065417594102198[313] = 0;
   out_4044065417594102198[314] = 0;
   out_4044065417594102198[315] = 0;
   out_4044065417594102198[316] = 0;
   out_4044065417594102198[317] = 0;
   out_4044065417594102198[318] = 0;
   out_4044065417594102198[319] = 0;
   out_4044065417594102198[320] = 0;
   out_4044065417594102198[321] = 0;
   out_4044065417594102198[322] = 0;
   out_4044065417594102198[323] = 0;
   out_4044065417594102198[324] = 0;
   out_4044065417594102198[325] = 0;
   out_4044065417594102198[326] = 0;
   out_4044065417594102198[327] = 0;
   out_4044065417594102198[328] = 0;
   out_4044065417594102198[329] = 0;
   out_4044065417594102198[330] = 1;
   out_4044065417594102198[331] = 0;
   out_4044065417594102198[332] = 0;
   out_4044065417594102198[333] = 0;
   out_4044065417594102198[334] = 0;
   out_4044065417594102198[335] = 0;
   out_4044065417594102198[336] = 0;
   out_4044065417594102198[337] = 0;
   out_4044065417594102198[338] = 0;
   out_4044065417594102198[339] = 0;
   out_4044065417594102198[340] = 0;
   out_4044065417594102198[341] = 0;
   out_4044065417594102198[342] = 0;
   out_4044065417594102198[343] = 0;
   out_4044065417594102198[344] = 0;
   out_4044065417594102198[345] = 0;
   out_4044065417594102198[346] = 0;
   out_4044065417594102198[347] = 0;
   out_4044065417594102198[348] = 0;
   out_4044065417594102198[349] = 0;
   out_4044065417594102198[350] = 0;
   out_4044065417594102198[351] = 0;
   out_4044065417594102198[352] = 1;
   out_4044065417594102198[353] = 0;
   out_4044065417594102198[354] = 0;
   out_4044065417594102198[355] = 0;
   out_4044065417594102198[356] = 0;
   out_4044065417594102198[357] = 0;
   out_4044065417594102198[358] = 0;
   out_4044065417594102198[359] = 0;
   out_4044065417594102198[360] = 0;
   out_4044065417594102198[361] = 0;
   out_4044065417594102198[362] = 0;
   out_4044065417594102198[363] = 0;
   out_4044065417594102198[364] = 0;
   out_4044065417594102198[365] = 0;
   out_4044065417594102198[366] = 0;
   out_4044065417594102198[367] = 0;
   out_4044065417594102198[368] = 0;
   out_4044065417594102198[369] = 0;
   out_4044065417594102198[370] = 0;
   out_4044065417594102198[371] = 0;
   out_4044065417594102198[372] = 0;
   out_4044065417594102198[373] = 0;
   out_4044065417594102198[374] = 1;
   out_4044065417594102198[375] = 0;
   out_4044065417594102198[376] = 0;
   out_4044065417594102198[377] = 0;
   out_4044065417594102198[378] = 0;
   out_4044065417594102198[379] = 0;
   out_4044065417594102198[380] = 0;
   out_4044065417594102198[381] = 0;
   out_4044065417594102198[382] = 0;
   out_4044065417594102198[383] = 0;
   out_4044065417594102198[384] = 0;
   out_4044065417594102198[385] = 0;
   out_4044065417594102198[386] = 0;
   out_4044065417594102198[387] = 0;
   out_4044065417594102198[388] = 0;
   out_4044065417594102198[389] = 0;
   out_4044065417594102198[390] = 0;
   out_4044065417594102198[391] = 0;
   out_4044065417594102198[392] = 0;
   out_4044065417594102198[393] = 0;
   out_4044065417594102198[394] = 0;
   out_4044065417594102198[395] = 0;
   out_4044065417594102198[396] = 1;
   out_4044065417594102198[397] = 0;
   out_4044065417594102198[398] = 0;
   out_4044065417594102198[399] = 0;
   out_4044065417594102198[400] = 0;
   out_4044065417594102198[401] = 0;
   out_4044065417594102198[402] = 0;
   out_4044065417594102198[403] = 0;
   out_4044065417594102198[404] = 0;
   out_4044065417594102198[405] = 0;
   out_4044065417594102198[406] = 0;
   out_4044065417594102198[407] = 0;
   out_4044065417594102198[408] = 0;
   out_4044065417594102198[409] = 0;
   out_4044065417594102198[410] = 0;
   out_4044065417594102198[411] = 0;
   out_4044065417594102198[412] = 0;
   out_4044065417594102198[413] = 0;
   out_4044065417594102198[414] = 0;
   out_4044065417594102198[415] = 0;
   out_4044065417594102198[416] = 0;
   out_4044065417594102198[417] = 0;
   out_4044065417594102198[418] = 1;
   out_4044065417594102198[419] = 0;
   out_4044065417594102198[420] = 0;
   out_4044065417594102198[421] = 0;
   out_4044065417594102198[422] = 0;
   out_4044065417594102198[423] = 0;
   out_4044065417594102198[424] = 0;
   out_4044065417594102198[425] = 0;
   out_4044065417594102198[426] = 0;
   out_4044065417594102198[427] = 0;
   out_4044065417594102198[428] = 0;
   out_4044065417594102198[429] = 0;
   out_4044065417594102198[430] = 0;
   out_4044065417594102198[431] = 0;
   out_4044065417594102198[432] = 0;
   out_4044065417594102198[433] = 0;
   out_4044065417594102198[434] = 0;
   out_4044065417594102198[435] = 0;
   out_4044065417594102198[436] = 0;
   out_4044065417594102198[437] = 0;
   out_4044065417594102198[438] = 0;
   out_4044065417594102198[439] = 0;
   out_4044065417594102198[440] = 1;
}
void h_4(double *state, double *unused, double *out_4601813282528246286) {
   out_4601813282528246286[0] = state[10] + state[13];
   out_4601813282528246286[1] = state[11] + state[14];
   out_4601813282528246286[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6822193976202631850) {
   out_6822193976202631850[0] = 0;
   out_6822193976202631850[1] = 0;
   out_6822193976202631850[2] = 0;
   out_6822193976202631850[3] = 0;
   out_6822193976202631850[4] = 0;
   out_6822193976202631850[5] = 0;
   out_6822193976202631850[6] = 0;
   out_6822193976202631850[7] = 0;
   out_6822193976202631850[8] = 0;
   out_6822193976202631850[9] = 0;
   out_6822193976202631850[10] = 1;
   out_6822193976202631850[11] = 0;
   out_6822193976202631850[12] = 0;
   out_6822193976202631850[13] = 1;
   out_6822193976202631850[14] = 0;
   out_6822193976202631850[15] = 0;
   out_6822193976202631850[16] = 0;
   out_6822193976202631850[17] = 0;
   out_6822193976202631850[18] = 0;
   out_6822193976202631850[19] = 0;
   out_6822193976202631850[20] = 0;
   out_6822193976202631850[21] = 0;
   out_6822193976202631850[22] = 0;
   out_6822193976202631850[23] = 0;
   out_6822193976202631850[24] = 0;
   out_6822193976202631850[25] = 0;
   out_6822193976202631850[26] = 0;
   out_6822193976202631850[27] = 0;
   out_6822193976202631850[28] = 0;
   out_6822193976202631850[29] = 0;
   out_6822193976202631850[30] = 0;
   out_6822193976202631850[31] = 0;
   out_6822193976202631850[32] = 0;
   out_6822193976202631850[33] = 1;
   out_6822193976202631850[34] = 0;
   out_6822193976202631850[35] = 0;
   out_6822193976202631850[36] = 1;
   out_6822193976202631850[37] = 0;
   out_6822193976202631850[38] = 0;
   out_6822193976202631850[39] = 0;
   out_6822193976202631850[40] = 0;
   out_6822193976202631850[41] = 0;
   out_6822193976202631850[42] = 0;
   out_6822193976202631850[43] = 0;
   out_6822193976202631850[44] = 0;
   out_6822193976202631850[45] = 0;
   out_6822193976202631850[46] = 0;
   out_6822193976202631850[47] = 0;
   out_6822193976202631850[48] = 0;
   out_6822193976202631850[49] = 0;
   out_6822193976202631850[50] = 0;
   out_6822193976202631850[51] = 0;
   out_6822193976202631850[52] = 0;
   out_6822193976202631850[53] = 0;
   out_6822193976202631850[54] = 0;
   out_6822193976202631850[55] = 0;
   out_6822193976202631850[56] = 1;
   out_6822193976202631850[57] = 0;
   out_6822193976202631850[58] = 0;
   out_6822193976202631850[59] = 1;
   out_6822193976202631850[60] = 0;
   out_6822193976202631850[61] = 0;
   out_6822193976202631850[62] = 0;
   out_6822193976202631850[63] = 0;
   out_6822193976202631850[64] = 0;
   out_6822193976202631850[65] = 0;
}
void h_9(double *state, double *unused, double *out_2050477823565117837) {
   out_2050477823565117837[0] = state[10];
   out_2050477823565117837[1] = state[11];
   out_2050477823565117837[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6581004329573041205) {
   out_6581004329573041205[0] = 0;
   out_6581004329573041205[1] = 0;
   out_6581004329573041205[2] = 0;
   out_6581004329573041205[3] = 0;
   out_6581004329573041205[4] = 0;
   out_6581004329573041205[5] = 0;
   out_6581004329573041205[6] = 0;
   out_6581004329573041205[7] = 0;
   out_6581004329573041205[8] = 0;
   out_6581004329573041205[9] = 0;
   out_6581004329573041205[10] = 1;
   out_6581004329573041205[11] = 0;
   out_6581004329573041205[12] = 0;
   out_6581004329573041205[13] = 0;
   out_6581004329573041205[14] = 0;
   out_6581004329573041205[15] = 0;
   out_6581004329573041205[16] = 0;
   out_6581004329573041205[17] = 0;
   out_6581004329573041205[18] = 0;
   out_6581004329573041205[19] = 0;
   out_6581004329573041205[20] = 0;
   out_6581004329573041205[21] = 0;
   out_6581004329573041205[22] = 0;
   out_6581004329573041205[23] = 0;
   out_6581004329573041205[24] = 0;
   out_6581004329573041205[25] = 0;
   out_6581004329573041205[26] = 0;
   out_6581004329573041205[27] = 0;
   out_6581004329573041205[28] = 0;
   out_6581004329573041205[29] = 0;
   out_6581004329573041205[30] = 0;
   out_6581004329573041205[31] = 0;
   out_6581004329573041205[32] = 0;
   out_6581004329573041205[33] = 1;
   out_6581004329573041205[34] = 0;
   out_6581004329573041205[35] = 0;
   out_6581004329573041205[36] = 0;
   out_6581004329573041205[37] = 0;
   out_6581004329573041205[38] = 0;
   out_6581004329573041205[39] = 0;
   out_6581004329573041205[40] = 0;
   out_6581004329573041205[41] = 0;
   out_6581004329573041205[42] = 0;
   out_6581004329573041205[43] = 0;
   out_6581004329573041205[44] = 0;
   out_6581004329573041205[45] = 0;
   out_6581004329573041205[46] = 0;
   out_6581004329573041205[47] = 0;
   out_6581004329573041205[48] = 0;
   out_6581004329573041205[49] = 0;
   out_6581004329573041205[50] = 0;
   out_6581004329573041205[51] = 0;
   out_6581004329573041205[52] = 0;
   out_6581004329573041205[53] = 0;
   out_6581004329573041205[54] = 0;
   out_6581004329573041205[55] = 0;
   out_6581004329573041205[56] = 1;
   out_6581004329573041205[57] = 0;
   out_6581004329573041205[58] = 0;
   out_6581004329573041205[59] = 0;
   out_6581004329573041205[60] = 0;
   out_6581004329573041205[61] = 0;
   out_6581004329573041205[62] = 0;
   out_6581004329573041205[63] = 0;
   out_6581004329573041205[64] = 0;
   out_6581004329573041205[65] = 0;
}
void h_10(double *state, double *unused, double *out_2110006911353143150) {
   out_2110006911353143150[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2110006911353143150[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2110006911353143150[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2584628456959966932) {
   out_2584628456959966932[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2584628456959966932[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2584628456959966932[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2584628456959966932[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2584628456959966932[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2584628456959966932[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2584628456959966932[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2584628456959966932[7] = 0;
   out_2584628456959966932[8] = 0;
   out_2584628456959966932[9] = 0;
   out_2584628456959966932[10] = 0;
   out_2584628456959966932[11] = 0;
   out_2584628456959966932[12] = 0;
   out_2584628456959966932[13] = 0;
   out_2584628456959966932[14] = 0;
   out_2584628456959966932[15] = 0;
   out_2584628456959966932[16] = 1;
   out_2584628456959966932[17] = 0;
   out_2584628456959966932[18] = 0;
   out_2584628456959966932[19] = 1;
   out_2584628456959966932[20] = 0;
   out_2584628456959966932[21] = 0;
   out_2584628456959966932[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2584628456959966932[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2584628456959966932[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2584628456959966932[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2584628456959966932[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2584628456959966932[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2584628456959966932[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2584628456959966932[29] = 0;
   out_2584628456959966932[30] = 0;
   out_2584628456959966932[31] = 0;
   out_2584628456959966932[32] = 0;
   out_2584628456959966932[33] = 0;
   out_2584628456959966932[34] = 0;
   out_2584628456959966932[35] = 0;
   out_2584628456959966932[36] = 0;
   out_2584628456959966932[37] = 0;
   out_2584628456959966932[38] = 0;
   out_2584628456959966932[39] = 1;
   out_2584628456959966932[40] = 0;
   out_2584628456959966932[41] = 0;
   out_2584628456959966932[42] = 1;
   out_2584628456959966932[43] = 0;
   out_2584628456959966932[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2584628456959966932[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2584628456959966932[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2584628456959966932[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2584628456959966932[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2584628456959966932[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2584628456959966932[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2584628456959966932[51] = 0;
   out_2584628456959966932[52] = 0;
   out_2584628456959966932[53] = 0;
   out_2584628456959966932[54] = 0;
   out_2584628456959966932[55] = 0;
   out_2584628456959966932[56] = 0;
   out_2584628456959966932[57] = 0;
   out_2584628456959966932[58] = 0;
   out_2584628456959966932[59] = 0;
   out_2584628456959966932[60] = 0;
   out_2584628456959966932[61] = 0;
   out_2584628456959966932[62] = 1;
   out_2584628456959966932[63] = 0;
   out_2584628456959966932[64] = 0;
   out_2584628456959966932[65] = 1;
}
void h_12(double *state, double *unused, double *out_2288494542137110932) {
   out_2288494542137110932[0] = state[0];
   out_2288494542137110932[1] = state[1];
   out_2288494542137110932[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1802737568170670055) {
   out_1802737568170670055[0] = 1;
   out_1802737568170670055[1] = 0;
   out_1802737568170670055[2] = 0;
   out_1802737568170670055[3] = 0;
   out_1802737568170670055[4] = 0;
   out_1802737568170670055[5] = 0;
   out_1802737568170670055[6] = 0;
   out_1802737568170670055[7] = 0;
   out_1802737568170670055[8] = 0;
   out_1802737568170670055[9] = 0;
   out_1802737568170670055[10] = 0;
   out_1802737568170670055[11] = 0;
   out_1802737568170670055[12] = 0;
   out_1802737568170670055[13] = 0;
   out_1802737568170670055[14] = 0;
   out_1802737568170670055[15] = 0;
   out_1802737568170670055[16] = 0;
   out_1802737568170670055[17] = 0;
   out_1802737568170670055[18] = 0;
   out_1802737568170670055[19] = 0;
   out_1802737568170670055[20] = 0;
   out_1802737568170670055[21] = 0;
   out_1802737568170670055[22] = 0;
   out_1802737568170670055[23] = 1;
   out_1802737568170670055[24] = 0;
   out_1802737568170670055[25] = 0;
   out_1802737568170670055[26] = 0;
   out_1802737568170670055[27] = 0;
   out_1802737568170670055[28] = 0;
   out_1802737568170670055[29] = 0;
   out_1802737568170670055[30] = 0;
   out_1802737568170670055[31] = 0;
   out_1802737568170670055[32] = 0;
   out_1802737568170670055[33] = 0;
   out_1802737568170670055[34] = 0;
   out_1802737568170670055[35] = 0;
   out_1802737568170670055[36] = 0;
   out_1802737568170670055[37] = 0;
   out_1802737568170670055[38] = 0;
   out_1802737568170670055[39] = 0;
   out_1802737568170670055[40] = 0;
   out_1802737568170670055[41] = 0;
   out_1802737568170670055[42] = 0;
   out_1802737568170670055[43] = 0;
   out_1802737568170670055[44] = 0;
   out_1802737568170670055[45] = 0;
   out_1802737568170670055[46] = 1;
   out_1802737568170670055[47] = 0;
   out_1802737568170670055[48] = 0;
   out_1802737568170670055[49] = 0;
   out_1802737568170670055[50] = 0;
   out_1802737568170670055[51] = 0;
   out_1802737568170670055[52] = 0;
   out_1802737568170670055[53] = 0;
   out_1802737568170670055[54] = 0;
   out_1802737568170670055[55] = 0;
   out_1802737568170670055[56] = 0;
   out_1802737568170670055[57] = 0;
   out_1802737568170670055[58] = 0;
   out_1802737568170670055[59] = 0;
   out_1802737568170670055[60] = 0;
   out_1802737568170670055[61] = 0;
   out_1802737568170670055[62] = 0;
   out_1802737568170670055[63] = 0;
   out_1802737568170670055[64] = 0;
   out_1802737568170670055[65] = 0;
}
void h_31(double *state, double *unused, double *out_3320005927060955619) {
   out_3320005927060955619[0] = state[7];
   out_3320005927060955619[1] = state[8];
   out_3320005927060955619[2] = state[9];
}
void H_31(double *state, double *unused, double *out_3455531918830024474) {
   out_3455531918830024474[0] = 0;
   out_3455531918830024474[1] = 0;
   out_3455531918830024474[2] = 0;
   out_3455531918830024474[3] = 0;
   out_3455531918830024474[4] = 0;
   out_3455531918830024474[5] = 0;
   out_3455531918830024474[6] = 0;
   out_3455531918830024474[7] = 1;
   out_3455531918830024474[8] = 0;
   out_3455531918830024474[9] = 0;
   out_3455531918830024474[10] = 0;
   out_3455531918830024474[11] = 0;
   out_3455531918830024474[12] = 0;
   out_3455531918830024474[13] = 0;
   out_3455531918830024474[14] = 0;
   out_3455531918830024474[15] = 0;
   out_3455531918830024474[16] = 0;
   out_3455531918830024474[17] = 0;
   out_3455531918830024474[18] = 0;
   out_3455531918830024474[19] = 0;
   out_3455531918830024474[20] = 0;
   out_3455531918830024474[21] = 0;
   out_3455531918830024474[22] = 0;
   out_3455531918830024474[23] = 0;
   out_3455531918830024474[24] = 0;
   out_3455531918830024474[25] = 0;
   out_3455531918830024474[26] = 0;
   out_3455531918830024474[27] = 0;
   out_3455531918830024474[28] = 0;
   out_3455531918830024474[29] = 0;
   out_3455531918830024474[30] = 1;
   out_3455531918830024474[31] = 0;
   out_3455531918830024474[32] = 0;
   out_3455531918830024474[33] = 0;
   out_3455531918830024474[34] = 0;
   out_3455531918830024474[35] = 0;
   out_3455531918830024474[36] = 0;
   out_3455531918830024474[37] = 0;
   out_3455531918830024474[38] = 0;
   out_3455531918830024474[39] = 0;
   out_3455531918830024474[40] = 0;
   out_3455531918830024474[41] = 0;
   out_3455531918830024474[42] = 0;
   out_3455531918830024474[43] = 0;
   out_3455531918830024474[44] = 0;
   out_3455531918830024474[45] = 0;
   out_3455531918830024474[46] = 0;
   out_3455531918830024474[47] = 0;
   out_3455531918830024474[48] = 0;
   out_3455531918830024474[49] = 0;
   out_3455531918830024474[50] = 0;
   out_3455531918830024474[51] = 0;
   out_3455531918830024474[52] = 0;
   out_3455531918830024474[53] = 1;
   out_3455531918830024474[54] = 0;
   out_3455531918830024474[55] = 0;
   out_3455531918830024474[56] = 0;
   out_3455531918830024474[57] = 0;
   out_3455531918830024474[58] = 0;
   out_3455531918830024474[59] = 0;
   out_3455531918830024474[60] = 0;
   out_3455531918830024474[61] = 0;
   out_3455531918830024474[62] = 0;
   out_3455531918830024474[63] = 0;
   out_3455531918830024474[64] = 0;
   out_3455531918830024474[65] = 0;
}
void h_32(double *state, double *unused, double *out_3151615380295529888) {
   out_3151615380295529888[0] = state[3];
   out_3151615380295529888[1] = state[4];
   out_3151615380295529888[2] = state[5];
   out_3151615380295529888[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4490669804141502383) {
   out_4490669804141502383[0] = 0;
   out_4490669804141502383[1] = 0;
   out_4490669804141502383[2] = 0;
   out_4490669804141502383[3] = 1;
   out_4490669804141502383[4] = 0;
   out_4490669804141502383[5] = 0;
   out_4490669804141502383[6] = 0;
   out_4490669804141502383[7] = 0;
   out_4490669804141502383[8] = 0;
   out_4490669804141502383[9] = 0;
   out_4490669804141502383[10] = 0;
   out_4490669804141502383[11] = 0;
   out_4490669804141502383[12] = 0;
   out_4490669804141502383[13] = 0;
   out_4490669804141502383[14] = 0;
   out_4490669804141502383[15] = 0;
   out_4490669804141502383[16] = 0;
   out_4490669804141502383[17] = 0;
   out_4490669804141502383[18] = 0;
   out_4490669804141502383[19] = 0;
   out_4490669804141502383[20] = 0;
   out_4490669804141502383[21] = 0;
   out_4490669804141502383[22] = 0;
   out_4490669804141502383[23] = 0;
   out_4490669804141502383[24] = 0;
   out_4490669804141502383[25] = 0;
   out_4490669804141502383[26] = 1;
   out_4490669804141502383[27] = 0;
   out_4490669804141502383[28] = 0;
   out_4490669804141502383[29] = 0;
   out_4490669804141502383[30] = 0;
   out_4490669804141502383[31] = 0;
   out_4490669804141502383[32] = 0;
   out_4490669804141502383[33] = 0;
   out_4490669804141502383[34] = 0;
   out_4490669804141502383[35] = 0;
   out_4490669804141502383[36] = 0;
   out_4490669804141502383[37] = 0;
   out_4490669804141502383[38] = 0;
   out_4490669804141502383[39] = 0;
   out_4490669804141502383[40] = 0;
   out_4490669804141502383[41] = 0;
   out_4490669804141502383[42] = 0;
   out_4490669804141502383[43] = 0;
   out_4490669804141502383[44] = 0;
   out_4490669804141502383[45] = 0;
   out_4490669804141502383[46] = 0;
   out_4490669804141502383[47] = 0;
   out_4490669804141502383[48] = 0;
   out_4490669804141502383[49] = 1;
   out_4490669804141502383[50] = 0;
   out_4490669804141502383[51] = 0;
   out_4490669804141502383[52] = 0;
   out_4490669804141502383[53] = 0;
   out_4490669804141502383[54] = 0;
   out_4490669804141502383[55] = 0;
   out_4490669804141502383[56] = 0;
   out_4490669804141502383[57] = 0;
   out_4490669804141502383[58] = 0;
   out_4490669804141502383[59] = 0;
   out_4490669804141502383[60] = 0;
   out_4490669804141502383[61] = 0;
   out_4490669804141502383[62] = 0;
   out_4490669804141502383[63] = 0;
   out_4490669804141502383[64] = 0;
   out_4490669804141502383[65] = 0;
   out_4490669804141502383[66] = 0;
   out_4490669804141502383[67] = 0;
   out_4490669804141502383[68] = 0;
   out_4490669804141502383[69] = 0;
   out_4490669804141502383[70] = 0;
   out_4490669804141502383[71] = 0;
   out_4490669804141502383[72] = 1;
   out_4490669804141502383[73] = 0;
   out_4490669804141502383[74] = 0;
   out_4490669804141502383[75] = 0;
   out_4490669804141502383[76] = 0;
   out_4490669804141502383[77] = 0;
   out_4490669804141502383[78] = 0;
   out_4490669804141502383[79] = 0;
   out_4490669804141502383[80] = 0;
   out_4490669804141502383[81] = 0;
   out_4490669804141502383[82] = 0;
   out_4490669804141502383[83] = 0;
   out_4490669804141502383[84] = 0;
   out_4490669804141502383[85] = 0;
   out_4490669804141502383[86] = 0;
   out_4490669804141502383[87] = 0;
}
void h_13(double *state, double *unused, double *out_1003991054242780984) {
   out_1003991054242780984[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1003991054242780984[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1003991054242780984[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_9086786425408962614) {
   out_9086786425408962614[0] = 0;
   out_9086786425408962614[1] = 0;
   out_9086786425408962614[2] = 0;
   out_9086786425408962614[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_9086786425408962614[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_9086786425408962614[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_9086786425408962614[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_9086786425408962614[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_9086786425408962614[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_9086786425408962614[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_9086786425408962614[10] = 0;
   out_9086786425408962614[11] = 0;
   out_9086786425408962614[12] = 0;
   out_9086786425408962614[13] = 0;
   out_9086786425408962614[14] = 0;
   out_9086786425408962614[15] = 0;
   out_9086786425408962614[16] = 0;
   out_9086786425408962614[17] = 0;
   out_9086786425408962614[18] = 0;
   out_9086786425408962614[19] = 0;
   out_9086786425408962614[20] = 0;
   out_9086786425408962614[21] = 0;
   out_9086786425408962614[22] = 0;
   out_9086786425408962614[23] = 0;
   out_9086786425408962614[24] = 0;
   out_9086786425408962614[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_9086786425408962614[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_9086786425408962614[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_9086786425408962614[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_9086786425408962614[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_9086786425408962614[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_9086786425408962614[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_9086786425408962614[32] = 0;
   out_9086786425408962614[33] = 0;
   out_9086786425408962614[34] = 0;
   out_9086786425408962614[35] = 0;
   out_9086786425408962614[36] = 0;
   out_9086786425408962614[37] = 0;
   out_9086786425408962614[38] = 0;
   out_9086786425408962614[39] = 0;
   out_9086786425408962614[40] = 0;
   out_9086786425408962614[41] = 0;
   out_9086786425408962614[42] = 0;
   out_9086786425408962614[43] = 0;
   out_9086786425408962614[44] = 0;
   out_9086786425408962614[45] = 0;
   out_9086786425408962614[46] = 0;
   out_9086786425408962614[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_9086786425408962614[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_9086786425408962614[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_9086786425408962614[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_9086786425408962614[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_9086786425408962614[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_9086786425408962614[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_9086786425408962614[54] = 0;
   out_9086786425408962614[55] = 0;
   out_9086786425408962614[56] = 0;
   out_9086786425408962614[57] = 0;
   out_9086786425408962614[58] = 0;
   out_9086786425408962614[59] = 0;
   out_9086786425408962614[60] = 0;
   out_9086786425408962614[61] = 0;
   out_9086786425408962614[62] = 0;
   out_9086786425408962614[63] = 0;
   out_9086786425408962614[64] = 0;
   out_9086786425408962614[65] = 0;
}
void h_14(double *state, double *unused, double *out_2050477823565117837) {
   out_2050477823565117837[0] = state[10];
   out_2050477823565117837[1] = state[11];
   out_2050477823565117837[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6581004329573041205) {
   out_6581004329573041205[0] = 0;
   out_6581004329573041205[1] = 0;
   out_6581004329573041205[2] = 0;
   out_6581004329573041205[3] = 0;
   out_6581004329573041205[4] = 0;
   out_6581004329573041205[5] = 0;
   out_6581004329573041205[6] = 0;
   out_6581004329573041205[7] = 0;
   out_6581004329573041205[8] = 0;
   out_6581004329573041205[9] = 0;
   out_6581004329573041205[10] = 1;
   out_6581004329573041205[11] = 0;
   out_6581004329573041205[12] = 0;
   out_6581004329573041205[13] = 0;
   out_6581004329573041205[14] = 0;
   out_6581004329573041205[15] = 0;
   out_6581004329573041205[16] = 0;
   out_6581004329573041205[17] = 0;
   out_6581004329573041205[18] = 0;
   out_6581004329573041205[19] = 0;
   out_6581004329573041205[20] = 0;
   out_6581004329573041205[21] = 0;
   out_6581004329573041205[22] = 0;
   out_6581004329573041205[23] = 0;
   out_6581004329573041205[24] = 0;
   out_6581004329573041205[25] = 0;
   out_6581004329573041205[26] = 0;
   out_6581004329573041205[27] = 0;
   out_6581004329573041205[28] = 0;
   out_6581004329573041205[29] = 0;
   out_6581004329573041205[30] = 0;
   out_6581004329573041205[31] = 0;
   out_6581004329573041205[32] = 0;
   out_6581004329573041205[33] = 1;
   out_6581004329573041205[34] = 0;
   out_6581004329573041205[35] = 0;
   out_6581004329573041205[36] = 0;
   out_6581004329573041205[37] = 0;
   out_6581004329573041205[38] = 0;
   out_6581004329573041205[39] = 0;
   out_6581004329573041205[40] = 0;
   out_6581004329573041205[41] = 0;
   out_6581004329573041205[42] = 0;
   out_6581004329573041205[43] = 0;
   out_6581004329573041205[44] = 0;
   out_6581004329573041205[45] = 0;
   out_6581004329573041205[46] = 0;
   out_6581004329573041205[47] = 0;
   out_6581004329573041205[48] = 0;
   out_6581004329573041205[49] = 0;
   out_6581004329573041205[50] = 0;
   out_6581004329573041205[51] = 0;
   out_6581004329573041205[52] = 0;
   out_6581004329573041205[53] = 0;
   out_6581004329573041205[54] = 0;
   out_6581004329573041205[55] = 0;
   out_6581004329573041205[56] = 1;
   out_6581004329573041205[57] = 0;
   out_6581004329573041205[58] = 0;
   out_6581004329573041205[59] = 0;
   out_6581004329573041205[60] = 0;
   out_6581004329573041205[61] = 0;
   out_6581004329573041205[62] = 0;
   out_6581004329573041205[63] = 0;
   out_6581004329573041205[64] = 0;
   out_6581004329573041205[65] = 0;
}
void h_33(double *state, double *unused, double *out_8352926782010900739) {
   out_8352926782010900739[0] = state[16];
   out_8352926782010900739[1] = state[17];
   out_8352926782010900739[2] = state[18];
}
void H_33(double *state, double *unused, double *out_304974914191166870) {
   out_304974914191166870[0] = 0;
   out_304974914191166870[1] = 0;
   out_304974914191166870[2] = 0;
   out_304974914191166870[3] = 0;
   out_304974914191166870[4] = 0;
   out_304974914191166870[5] = 0;
   out_304974914191166870[6] = 0;
   out_304974914191166870[7] = 0;
   out_304974914191166870[8] = 0;
   out_304974914191166870[9] = 0;
   out_304974914191166870[10] = 0;
   out_304974914191166870[11] = 0;
   out_304974914191166870[12] = 0;
   out_304974914191166870[13] = 0;
   out_304974914191166870[14] = 0;
   out_304974914191166870[15] = 0;
   out_304974914191166870[16] = 1;
   out_304974914191166870[17] = 0;
   out_304974914191166870[18] = 0;
   out_304974914191166870[19] = 0;
   out_304974914191166870[20] = 0;
   out_304974914191166870[21] = 0;
   out_304974914191166870[22] = 0;
   out_304974914191166870[23] = 0;
   out_304974914191166870[24] = 0;
   out_304974914191166870[25] = 0;
   out_304974914191166870[26] = 0;
   out_304974914191166870[27] = 0;
   out_304974914191166870[28] = 0;
   out_304974914191166870[29] = 0;
   out_304974914191166870[30] = 0;
   out_304974914191166870[31] = 0;
   out_304974914191166870[32] = 0;
   out_304974914191166870[33] = 0;
   out_304974914191166870[34] = 0;
   out_304974914191166870[35] = 0;
   out_304974914191166870[36] = 0;
   out_304974914191166870[37] = 0;
   out_304974914191166870[38] = 0;
   out_304974914191166870[39] = 1;
   out_304974914191166870[40] = 0;
   out_304974914191166870[41] = 0;
   out_304974914191166870[42] = 0;
   out_304974914191166870[43] = 0;
   out_304974914191166870[44] = 0;
   out_304974914191166870[45] = 0;
   out_304974914191166870[46] = 0;
   out_304974914191166870[47] = 0;
   out_304974914191166870[48] = 0;
   out_304974914191166870[49] = 0;
   out_304974914191166870[50] = 0;
   out_304974914191166870[51] = 0;
   out_304974914191166870[52] = 0;
   out_304974914191166870[53] = 0;
   out_304974914191166870[54] = 0;
   out_304974914191166870[55] = 0;
   out_304974914191166870[56] = 0;
   out_304974914191166870[57] = 0;
   out_304974914191166870[58] = 0;
   out_304974914191166870[59] = 0;
   out_304974914191166870[60] = 0;
   out_304974914191166870[61] = 0;
   out_304974914191166870[62] = 1;
   out_304974914191166870[63] = 0;
   out_304974914191166870[64] = 0;
   out_304974914191166870[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1661342885356962876) {
  H(in_vec, out_1661342885356962876);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2279440072678078976) {
  err_fun(nom_x, delta_x, out_2279440072678078976);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5203322416787072396) {
  inv_err_fun(nom_x, true_x, out_5203322416787072396);
}
void live_H_mod_fun(double *state, double *out_7445739159746980786) {
  H_mod_fun(state, out_7445739159746980786);
}
void live_f_fun(double *state, double dt, double *out_8029348862025951388) {
  f_fun(state,  dt, out_8029348862025951388);
}
void live_F_fun(double *state, double dt, double *out_4044065417594102198) {
  F_fun(state,  dt, out_4044065417594102198);
}
void live_h_4(double *state, double *unused, double *out_4601813282528246286) {
  h_4(state, unused, out_4601813282528246286);
}
void live_H_4(double *state, double *unused, double *out_6822193976202631850) {
  H_4(state, unused, out_6822193976202631850);
}
void live_h_9(double *state, double *unused, double *out_2050477823565117837) {
  h_9(state, unused, out_2050477823565117837);
}
void live_H_9(double *state, double *unused, double *out_6581004329573041205) {
  H_9(state, unused, out_6581004329573041205);
}
void live_h_10(double *state, double *unused, double *out_2110006911353143150) {
  h_10(state, unused, out_2110006911353143150);
}
void live_H_10(double *state, double *unused, double *out_2584628456959966932) {
  H_10(state, unused, out_2584628456959966932);
}
void live_h_12(double *state, double *unused, double *out_2288494542137110932) {
  h_12(state, unused, out_2288494542137110932);
}
void live_H_12(double *state, double *unused, double *out_1802737568170670055) {
  H_12(state, unused, out_1802737568170670055);
}
void live_h_31(double *state, double *unused, double *out_3320005927060955619) {
  h_31(state, unused, out_3320005927060955619);
}
void live_H_31(double *state, double *unused, double *out_3455531918830024474) {
  H_31(state, unused, out_3455531918830024474);
}
void live_h_32(double *state, double *unused, double *out_3151615380295529888) {
  h_32(state, unused, out_3151615380295529888);
}
void live_H_32(double *state, double *unused, double *out_4490669804141502383) {
  H_32(state, unused, out_4490669804141502383);
}
void live_h_13(double *state, double *unused, double *out_1003991054242780984) {
  h_13(state, unused, out_1003991054242780984);
}
void live_H_13(double *state, double *unused, double *out_9086786425408962614) {
  H_13(state, unused, out_9086786425408962614);
}
void live_h_14(double *state, double *unused, double *out_2050477823565117837) {
  h_14(state, unused, out_2050477823565117837);
}
void live_H_14(double *state, double *unused, double *out_6581004329573041205) {
  H_14(state, unused, out_6581004329573041205);
}
void live_h_33(double *state, double *unused, double *out_8352926782010900739) {
  h_33(state, unused, out_8352926782010900739);
}
void live_H_33(double *state, double *unused, double *out_304974914191166870) {
  H_33(state, unused, out_304974914191166870);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
