#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7314429967761925320) {
   out_7314429967761925320[0] = 0;
   out_7314429967761925320[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7314429967761925320[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7314429967761925320[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7314429967761925320[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7314429967761925320[5] = -sin(in_vec[1]);
   out_7314429967761925320[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7314429967761925320[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7314429967761925320[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7314429967761925320[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7314429967761925320[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7314429967761925320[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7314429967761925320[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7314429967761925320[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7314429967761925320[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7314429967761925320[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7314429967761925320[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7314429967761925320[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5063828239748852282) {
   out_5063828239748852282[0] = delta_x[0] + nom_x[0];
   out_5063828239748852282[1] = delta_x[1] + nom_x[1];
   out_5063828239748852282[2] = delta_x[2] + nom_x[2];
   out_5063828239748852282[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5063828239748852282[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5063828239748852282[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5063828239748852282[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5063828239748852282[7] = delta_x[6] + nom_x[7];
   out_5063828239748852282[8] = delta_x[7] + nom_x[8];
   out_5063828239748852282[9] = delta_x[8] + nom_x[9];
   out_5063828239748852282[10] = delta_x[9] + nom_x[10];
   out_5063828239748852282[11] = delta_x[10] + nom_x[11];
   out_5063828239748852282[12] = delta_x[11] + nom_x[12];
   out_5063828239748852282[13] = delta_x[12] + nom_x[13];
   out_5063828239748852282[14] = delta_x[13] + nom_x[14];
   out_5063828239748852282[15] = delta_x[14] + nom_x[15];
   out_5063828239748852282[16] = delta_x[15] + nom_x[16];
   out_5063828239748852282[17] = delta_x[16] + nom_x[17];
   out_5063828239748852282[18] = delta_x[17] + nom_x[18];
   out_5063828239748852282[19] = delta_x[18] + nom_x[19];
   out_5063828239748852282[20] = delta_x[19] + nom_x[20];
   out_5063828239748852282[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3766884446287441611) {
   out_3766884446287441611[0] = -nom_x[0] + true_x[0];
   out_3766884446287441611[1] = -nom_x[1] + true_x[1];
   out_3766884446287441611[2] = -nom_x[2] + true_x[2];
   out_3766884446287441611[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3766884446287441611[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3766884446287441611[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3766884446287441611[6] = -nom_x[7] + true_x[7];
   out_3766884446287441611[7] = -nom_x[8] + true_x[8];
   out_3766884446287441611[8] = -nom_x[9] + true_x[9];
   out_3766884446287441611[9] = -nom_x[10] + true_x[10];
   out_3766884446287441611[10] = -nom_x[11] + true_x[11];
   out_3766884446287441611[11] = -nom_x[12] + true_x[12];
   out_3766884446287441611[12] = -nom_x[13] + true_x[13];
   out_3766884446287441611[13] = -nom_x[14] + true_x[14];
   out_3766884446287441611[14] = -nom_x[15] + true_x[15];
   out_3766884446287441611[15] = -nom_x[16] + true_x[16];
   out_3766884446287441611[16] = -nom_x[17] + true_x[17];
   out_3766884446287441611[17] = -nom_x[18] + true_x[18];
   out_3766884446287441611[18] = -nom_x[19] + true_x[19];
   out_3766884446287441611[19] = -nom_x[20] + true_x[20];
   out_3766884446287441611[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5299362412229614450) {
   out_5299362412229614450[0] = 1.0;
   out_5299362412229614450[1] = 0;
   out_5299362412229614450[2] = 0;
   out_5299362412229614450[3] = 0;
   out_5299362412229614450[4] = 0;
   out_5299362412229614450[5] = 0;
   out_5299362412229614450[6] = 0;
   out_5299362412229614450[7] = 0;
   out_5299362412229614450[8] = 0;
   out_5299362412229614450[9] = 0;
   out_5299362412229614450[10] = 0;
   out_5299362412229614450[11] = 0;
   out_5299362412229614450[12] = 0;
   out_5299362412229614450[13] = 0;
   out_5299362412229614450[14] = 0;
   out_5299362412229614450[15] = 0;
   out_5299362412229614450[16] = 0;
   out_5299362412229614450[17] = 0;
   out_5299362412229614450[18] = 0;
   out_5299362412229614450[19] = 0;
   out_5299362412229614450[20] = 0;
   out_5299362412229614450[21] = 0;
   out_5299362412229614450[22] = 1.0;
   out_5299362412229614450[23] = 0;
   out_5299362412229614450[24] = 0;
   out_5299362412229614450[25] = 0;
   out_5299362412229614450[26] = 0;
   out_5299362412229614450[27] = 0;
   out_5299362412229614450[28] = 0;
   out_5299362412229614450[29] = 0;
   out_5299362412229614450[30] = 0;
   out_5299362412229614450[31] = 0;
   out_5299362412229614450[32] = 0;
   out_5299362412229614450[33] = 0;
   out_5299362412229614450[34] = 0;
   out_5299362412229614450[35] = 0;
   out_5299362412229614450[36] = 0;
   out_5299362412229614450[37] = 0;
   out_5299362412229614450[38] = 0;
   out_5299362412229614450[39] = 0;
   out_5299362412229614450[40] = 0;
   out_5299362412229614450[41] = 0;
   out_5299362412229614450[42] = 0;
   out_5299362412229614450[43] = 0;
   out_5299362412229614450[44] = 1.0;
   out_5299362412229614450[45] = 0;
   out_5299362412229614450[46] = 0;
   out_5299362412229614450[47] = 0;
   out_5299362412229614450[48] = 0;
   out_5299362412229614450[49] = 0;
   out_5299362412229614450[50] = 0;
   out_5299362412229614450[51] = 0;
   out_5299362412229614450[52] = 0;
   out_5299362412229614450[53] = 0;
   out_5299362412229614450[54] = 0;
   out_5299362412229614450[55] = 0;
   out_5299362412229614450[56] = 0;
   out_5299362412229614450[57] = 0;
   out_5299362412229614450[58] = 0;
   out_5299362412229614450[59] = 0;
   out_5299362412229614450[60] = 0;
   out_5299362412229614450[61] = 0;
   out_5299362412229614450[62] = 0;
   out_5299362412229614450[63] = 0;
   out_5299362412229614450[64] = 0;
   out_5299362412229614450[65] = 0;
   out_5299362412229614450[66] = -0.5*state[4];
   out_5299362412229614450[67] = -0.5*state[5];
   out_5299362412229614450[68] = -0.5*state[6];
   out_5299362412229614450[69] = 0;
   out_5299362412229614450[70] = 0;
   out_5299362412229614450[71] = 0;
   out_5299362412229614450[72] = 0;
   out_5299362412229614450[73] = 0;
   out_5299362412229614450[74] = 0;
   out_5299362412229614450[75] = 0;
   out_5299362412229614450[76] = 0;
   out_5299362412229614450[77] = 0;
   out_5299362412229614450[78] = 0;
   out_5299362412229614450[79] = 0;
   out_5299362412229614450[80] = 0;
   out_5299362412229614450[81] = 0;
   out_5299362412229614450[82] = 0;
   out_5299362412229614450[83] = 0;
   out_5299362412229614450[84] = 0;
   out_5299362412229614450[85] = 0;
   out_5299362412229614450[86] = 0;
   out_5299362412229614450[87] = 0.5*state[3];
   out_5299362412229614450[88] = 0.5*state[6];
   out_5299362412229614450[89] = -0.5*state[5];
   out_5299362412229614450[90] = 0;
   out_5299362412229614450[91] = 0;
   out_5299362412229614450[92] = 0;
   out_5299362412229614450[93] = 0;
   out_5299362412229614450[94] = 0;
   out_5299362412229614450[95] = 0;
   out_5299362412229614450[96] = 0;
   out_5299362412229614450[97] = 0;
   out_5299362412229614450[98] = 0;
   out_5299362412229614450[99] = 0;
   out_5299362412229614450[100] = 0;
   out_5299362412229614450[101] = 0;
   out_5299362412229614450[102] = 0;
   out_5299362412229614450[103] = 0;
   out_5299362412229614450[104] = 0;
   out_5299362412229614450[105] = 0;
   out_5299362412229614450[106] = 0;
   out_5299362412229614450[107] = 0;
   out_5299362412229614450[108] = -0.5*state[6];
   out_5299362412229614450[109] = 0.5*state[3];
   out_5299362412229614450[110] = 0.5*state[4];
   out_5299362412229614450[111] = 0;
   out_5299362412229614450[112] = 0;
   out_5299362412229614450[113] = 0;
   out_5299362412229614450[114] = 0;
   out_5299362412229614450[115] = 0;
   out_5299362412229614450[116] = 0;
   out_5299362412229614450[117] = 0;
   out_5299362412229614450[118] = 0;
   out_5299362412229614450[119] = 0;
   out_5299362412229614450[120] = 0;
   out_5299362412229614450[121] = 0;
   out_5299362412229614450[122] = 0;
   out_5299362412229614450[123] = 0;
   out_5299362412229614450[124] = 0;
   out_5299362412229614450[125] = 0;
   out_5299362412229614450[126] = 0;
   out_5299362412229614450[127] = 0;
   out_5299362412229614450[128] = 0;
   out_5299362412229614450[129] = 0.5*state[5];
   out_5299362412229614450[130] = -0.5*state[4];
   out_5299362412229614450[131] = 0.5*state[3];
   out_5299362412229614450[132] = 0;
   out_5299362412229614450[133] = 0;
   out_5299362412229614450[134] = 0;
   out_5299362412229614450[135] = 0;
   out_5299362412229614450[136] = 0;
   out_5299362412229614450[137] = 0;
   out_5299362412229614450[138] = 0;
   out_5299362412229614450[139] = 0;
   out_5299362412229614450[140] = 0;
   out_5299362412229614450[141] = 0;
   out_5299362412229614450[142] = 0;
   out_5299362412229614450[143] = 0;
   out_5299362412229614450[144] = 0;
   out_5299362412229614450[145] = 0;
   out_5299362412229614450[146] = 0;
   out_5299362412229614450[147] = 0;
   out_5299362412229614450[148] = 0;
   out_5299362412229614450[149] = 0;
   out_5299362412229614450[150] = 0;
   out_5299362412229614450[151] = 0;
   out_5299362412229614450[152] = 0;
   out_5299362412229614450[153] = 1.0;
   out_5299362412229614450[154] = 0;
   out_5299362412229614450[155] = 0;
   out_5299362412229614450[156] = 0;
   out_5299362412229614450[157] = 0;
   out_5299362412229614450[158] = 0;
   out_5299362412229614450[159] = 0;
   out_5299362412229614450[160] = 0;
   out_5299362412229614450[161] = 0;
   out_5299362412229614450[162] = 0;
   out_5299362412229614450[163] = 0;
   out_5299362412229614450[164] = 0;
   out_5299362412229614450[165] = 0;
   out_5299362412229614450[166] = 0;
   out_5299362412229614450[167] = 0;
   out_5299362412229614450[168] = 0;
   out_5299362412229614450[169] = 0;
   out_5299362412229614450[170] = 0;
   out_5299362412229614450[171] = 0;
   out_5299362412229614450[172] = 0;
   out_5299362412229614450[173] = 0;
   out_5299362412229614450[174] = 0;
   out_5299362412229614450[175] = 1.0;
   out_5299362412229614450[176] = 0;
   out_5299362412229614450[177] = 0;
   out_5299362412229614450[178] = 0;
   out_5299362412229614450[179] = 0;
   out_5299362412229614450[180] = 0;
   out_5299362412229614450[181] = 0;
   out_5299362412229614450[182] = 0;
   out_5299362412229614450[183] = 0;
   out_5299362412229614450[184] = 0;
   out_5299362412229614450[185] = 0;
   out_5299362412229614450[186] = 0;
   out_5299362412229614450[187] = 0;
   out_5299362412229614450[188] = 0;
   out_5299362412229614450[189] = 0;
   out_5299362412229614450[190] = 0;
   out_5299362412229614450[191] = 0;
   out_5299362412229614450[192] = 0;
   out_5299362412229614450[193] = 0;
   out_5299362412229614450[194] = 0;
   out_5299362412229614450[195] = 0;
   out_5299362412229614450[196] = 0;
   out_5299362412229614450[197] = 1.0;
   out_5299362412229614450[198] = 0;
   out_5299362412229614450[199] = 0;
   out_5299362412229614450[200] = 0;
   out_5299362412229614450[201] = 0;
   out_5299362412229614450[202] = 0;
   out_5299362412229614450[203] = 0;
   out_5299362412229614450[204] = 0;
   out_5299362412229614450[205] = 0;
   out_5299362412229614450[206] = 0;
   out_5299362412229614450[207] = 0;
   out_5299362412229614450[208] = 0;
   out_5299362412229614450[209] = 0;
   out_5299362412229614450[210] = 0;
   out_5299362412229614450[211] = 0;
   out_5299362412229614450[212] = 0;
   out_5299362412229614450[213] = 0;
   out_5299362412229614450[214] = 0;
   out_5299362412229614450[215] = 0;
   out_5299362412229614450[216] = 0;
   out_5299362412229614450[217] = 0;
   out_5299362412229614450[218] = 0;
   out_5299362412229614450[219] = 1.0;
   out_5299362412229614450[220] = 0;
   out_5299362412229614450[221] = 0;
   out_5299362412229614450[222] = 0;
   out_5299362412229614450[223] = 0;
   out_5299362412229614450[224] = 0;
   out_5299362412229614450[225] = 0;
   out_5299362412229614450[226] = 0;
   out_5299362412229614450[227] = 0;
   out_5299362412229614450[228] = 0;
   out_5299362412229614450[229] = 0;
   out_5299362412229614450[230] = 0;
   out_5299362412229614450[231] = 0;
   out_5299362412229614450[232] = 0;
   out_5299362412229614450[233] = 0;
   out_5299362412229614450[234] = 0;
   out_5299362412229614450[235] = 0;
   out_5299362412229614450[236] = 0;
   out_5299362412229614450[237] = 0;
   out_5299362412229614450[238] = 0;
   out_5299362412229614450[239] = 0;
   out_5299362412229614450[240] = 0;
   out_5299362412229614450[241] = 1.0;
   out_5299362412229614450[242] = 0;
   out_5299362412229614450[243] = 0;
   out_5299362412229614450[244] = 0;
   out_5299362412229614450[245] = 0;
   out_5299362412229614450[246] = 0;
   out_5299362412229614450[247] = 0;
   out_5299362412229614450[248] = 0;
   out_5299362412229614450[249] = 0;
   out_5299362412229614450[250] = 0;
   out_5299362412229614450[251] = 0;
   out_5299362412229614450[252] = 0;
   out_5299362412229614450[253] = 0;
   out_5299362412229614450[254] = 0;
   out_5299362412229614450[255] = 0;
   out_5299362412229614450[256] = 0;
   out_5299362412229614450[257] = 0;
   out_5299362412229614450[258] = 0;
   out_5299362412229614450[259] = 0;
   out_5299362412229614450[260] = 0;
   out_5299362412229614450[261] = 0;
   out_5299362412229614450[262] = 0;
   out_5299362412229614450[263] = 1.0;
   out_5299362412229614450[264] = 0;
   out_5299362412229614450[265] = 0;
   out_5299362412229614450[266] = 0;
   out_5299362412229614450[267] = 0;
   out_5299362412229614450[268] = 0;
   out_5299362412229614450[269] = 0;
   out_5299362412229614450[270] = 0;
   out_5299362412229614450[271] = 0;
   out_5299362412229614450[272] = 0;
   out_5299362412229614450[273] = 0;
   out_5299362412229614450[274] = 0;
   out_5299362412229614450[275] = 0;
   out_5299362412229614450[276] = 0;
   out_5299362412229614450[277] = 0;
   out_5299362412229614450[278] = 0;
   out_5299362412229614450[279] = 0;
   out_5299362412229614450[280] = 0;
   out_5299362412229614450[281] = 0;
   out_5299362412229614450[282] = 0;
   out_5299362412229614450[283] = 0;
   out_5299362412229614450[284] = 0;
   out_5299362412229614450[285] = 1.0;
   out_5299362412229614450[286] = 0;
   out_5299362412229614450[287] = 0;
   out_5299362412229614450[288] = 0;
   out_5299362412229614450[289] = 0;
   out_5299362412229614450[290] = 0;
   out_5299362412229614450[291] = 0;
   out_5299362412229614450[292] = 0;
   out_5299362412229614450[293] = 0;
   out_5299362412229614450[294] = 0;
   out_5299362412229614450[295] = 0;
   out_5299362412229614450[296] = 0;
   out_5299362412229614450[297] = 0;
   out_5299362412229614450[298] = 0;
   out_5299362412229614450[299] = 0;
   out_5299362412229614450[300] = 0;
   out_5299362412229614450[301] = 0;
   out_5299362412229614450[302] = 0;
   out_5299362412229614450[303] = 0;
   out_5299362412229614450[304] = 0;
   out_5299362412229614450[305] = 0;
   out_5299362412229614450[306] = 0;
   out_5299362412229614450[307] = 1.0;
   out_5299362412229614450[308] = 0;
   out_5299362412229614450[309] = 0;
   out_5299362412229614450[310] = 0;
   out_5299362412229614450[311] = 0;
   out_5299362412229614450[312] = 0;
   out_5299362412229614450[313] = 0;
   out_5299362412229614450[314] = 0;
   out_5299362412229614450[315] = 0;
   out_5299362412229614450[316] = 0;
   out_5299362412229614450[317] = 0;
   out_5299362412229614450[318] = 0;
   out_5299362412229614450[319] = 0;
   out_5299362412229614450[320] = 0;
   out_5299362412229614450[321] = 0;
   out_5299362412229614450[322] = 0;
   out_5299362412229614450[323] = 0;
   out_5299362412229614450[324] = 0;
   out_5299362412229614450[325] = 0;
   out_5299362412229614450[326] = 0;
   out_5299362412229614450[327] = 0;
   out_5299362412229614450[328] = 0;
   out_5299362412229614450[329] = 1.0;
   out_5299362412229614450[330] = 0;
   out_5299362412229614450[331] = 0;
   out_5299362412229614450[332] = 0;
   out_5299362412229614450[333] = 0;
   out_5299362412229614450[334] = 0;
   out_5299362412229614450[335] = 0;
   out_5299362412229614450[336] = 0;
   out_5299362412229614450[337] = 0;
   out_5299362412229614450[338] = 0;
   out_5299362412229614450[339] = 0;
   out_5299362412229614450[340] = 0;
   out_5299362412229614450[341] = 0;
   out_5299362412229614450[342] = 0;
   out_5299362412229614450[343] = 0;
   out_5299362412229614450[344] = 0;
   out_5299362412229614450[345] = 0;
   out_5299362412229614450[346] = 0;
   out_5299362412229614450[347] = 0;
   out_5299362412229614450[348] = 0;
   out_5299362412229614450[349] = 0;
   out_5299362412229614450[350] = 0;
   out_5299362412229614450[351] = 1.0;
   out_5299362412229614450[352] = 0;
   out_5299362412229614450[353] = 0;
   out_5299362412229614450[354] = 0;
   out_5299362412229614450[355] = 0;
   out_5299362412229614450[356] = 0;
   out_5299362412229614450[357] = 0;
   out_5299362412229614450[358] = 0;
   out_5299362412229614450[359] = 0;
   out_5299362412229614450[360] = 0;
   out_5299362412229614450[361] = 0;
   out_5299362412229614450[362] = 0;
   out_5299362412229614450[363] = 0;
   out_5299362412229614450[364] = 0;
   out_5299362412229614450[365] = 0;
   out_5299362412229614450[366] = 0;
   out_5299362412229614450[367] = 0;
   out_5299362412229614450[368] = 0;
   out_5299362412229614450[369] = 0;
   out_5299362412229614450[370] = 0;
   out_5299362412229614450[371] = 0;
   out_5299362412229614450[372] = 0;
   out_5299362412229614450[373] = 1.0;
   out_5299362412229614450[374] = 0;
   out_5299362412229614450[375] = 0;
   out_5299362412229614450[376] = 0;
   out_5299362412229614450[377] = 0;
   out_5299362412229614450[378] = 0;
   out_5299362412229614450[379] = 0;
   out_5299362412229614450[380] = 0;
   out_5299362412229614450[381] = 0;
   out_5299362412229614450[382] = 0;
   out_5299362412229614450[383] = 0;
   out_5299362412229614450[384] = 0;
   out_5299362412229614450[385] = 0;
   out_5299362412229614450[386] = 0;
   out_5299362412229614450[387] = 0;
   out_5299362412229614450[388] = 0;
   out_5299362412229614450[389] = 0;
   out_5299362412229614450[390] = 0;
   out_5299362412229614450[391] = 0;
   out_5299362412229614450[392] = 0;
   out_5299362412229614450[393] = 0;
   out_5299362412229614450[394] = 0;
   out_5299362412229614450[395] = 1.0;
   out_5299362412229614450[396] = 0;
   out_5299362412229614450[397] = 0;
   out_5299362412229614450[398] = 0;
   out_5299362412229614450[399] = 0;
   out_5299362412229614450[400] = 0;
   out_5299362412229614450[401] = 0;
   out_5299362412229614450[402] = 0;
   out_5299362412229614450[403] = 0;
   out_5299362412229614450[404] = 0;
   out_5299362412229614450[405] = 0;
   out_5299362412229614450[406] = 0;
   out_5299362412229614450[407] = 0;
   out_5299362412229614450[408] = 0;
   out_5299362412229614450[409] = 0;
   out_5299362412229614450[410] = 0;
   out_5299362412229614450[411] = 0;
   out_5299362412229614450[412] = 0;
   out_5299362412229614450[413] = 0;
   out_5299362412229614450[414] = 0;
   out_5299362412229614450[415] = 0;
   out_5299362412229614450[416] = 0;
   out_5299362412229614450[417] = 1.0;
   out_5299362412229614450[418] = 0;
   out_5299362412229614450[419] = 0;
   out_5299362412229614450[420] = 0;
   out_5299362412229614450[421] = 0;
   out_5299362412229614450[422] = 0;
   out_5299362412229614450[423] = 0;
   out_5299362412229614450[424] = 0;
   out_5299362412229614450[425] = 0;
   out_5299362412229614450[426] = 0;
   out_5299362412229614450[427] = 0;
   out_5299362412229614450[428] = 0;
   out_5299362412229614450[429] = 0;
   out_5299362412229614450[430] = 0;
   out_5299362412229614450[431] = 0;
   out_5299362412229614450[432] = 0;
   out_5299362412229614450[433] = 0;
   out_5299362412229614450[434] = 0;
   out_5299362412229614450[435] = 0;
   out_5299362412229614450[436] = 0;
   out_5299362412229614450[437] = 0;
   out_5299362412229614450[438] = 0;
   out_5299362412229614450[439] = 1.0;
   out_5299362412229614450[440] = 0;
   out_5299362412229614450[441] = 0;
   out_5299362412229614450[442] = 0;
   out_5299362412229614450[443] = 0;
   out_5299362412229614450[444] = 0;
   out_5299362412229614450[445] = 0;
   out_5299362412229614450[446] = 0;
   out_5299362412229614450[447] = 0;
   out_5299362412229614450[448] = 0;
   out_5299362412229614450[449] = 0;
   out_5299362412229614450[450] = 0;
   out_5299362412229614450[451] = 0;
   out_5299362412229614450[452] = 0;
   out_5299362412229614450[453] = 0;
   out_5299362412229614450[454] = 0;
   out_5299362412229614450[455] = 0;
   out_5299362412229614450[456] = 0;
   out_5299362412229614450[457] = 0;
   out_5299362412229614450[458] = 0;
   out_5299362412229614450[459] = 0;
   out_5299362412229614450[460] = 0;
   out_5299362412229614450[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6438217386767210752) {
   out_6438217386767210752[0] = dt*state[7] + state[0];
   out_6438217386767210752[1] = dt*state[8] + state[1];
   out_6438217386767210752[2] = dt*state[9] + state[2];
   out_6438217386767210752[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6438217386767210752[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6438217386767210752[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6438217386767210752[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6438217386767210752[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6438217386767210752[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6438217386767210752[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6438217386767210752[10] = state[10];
   out_6438217386767210752[11] = state[11];
   out_6438217386767210752[12] = state[12];
   out_6438217386767210752[13] = state[13];
   out_6438217386767210752[14] = state[14];
   out_6438217386767210752[15] = state[15];
   out_6438217386767210752[16] = state[16];
   out_6438217386767210752[17] = state[17];
   out_6438217386767210752[18] = state[18];
   out_6438217386767210752[19] = state[19];
   out_6438217386767210752[20] = state[20];
   out_6438217386767210752[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8711821868833026606) {
   out_8711821868833026606[0] = 1;
   out_8711821868833026606[1] = 0;
   out_8711821868833026606[2] = 0;
   out_8711821868833026606[3] = 0;
   out_8711821868833026606[4] = 0;
   out_8711821868833026606[5] = 0;
   out_8711821868833026606[6] = dt;
   out_8711821868833026606[7] = 0;
   out_8711821868833026606[8] = 0;
   out_8711821868833026606[9] = 0;
   out_8711821868833026606[10] = 0;
   out_8711821868833026606[11] = 0;
   out_8711821868833026606[12] = 0;
   out_8711821868833026606[13] = 0;
   out_8711821868833026606[14] = 0;
   out_8711821868833026606[15] = 0;
   out_8711821868833026606[16] = 0;
   out_8711821868833026606[17] = 0;
   out_8711821868833026606[18] = 0;
   out_8711821868833026606[19] = 0;
   out_8711821868833026606[20] = 0;
   out_8711821868833026606[21] = 0;
   out_8711821868833026606[22] = 1;
   out_8711821868833026606[23] = 0;
   out_8711821868833026606[24] = 0;
   out_8711821868833026606[25] = 0;
   out_8711821868833026606[26] = 0;
   out_8711821868833026606[27] = 0;
   out_8711821868833026606[28] = dt;
   out_8711821868833026606[29] = 0;
   out_8711821868833026606[30] = 0;
   out_8711821868833026606[31] = 0;
   out_8711821868833026606[32] = 0;
   out_8711821868833026606[33] = 0;
   out_8711821868833026606[34] = 0;
   out_8711821868833026606[35] = 0;
   out_8711821868833026606[36] = 0;
   out_8711821868833026606[37] = 0;
   out_8711821868833026606[38] = 0;
   out_8711821868833026606[39] = 0;
   out_8711821868833026606[40] = 0;
   out_8711821868833026606[41] = 0;
   out_8711821868833026606[42] = 0;
   out_8711821868833026606[43] = 0;
   out_8711821868833026606[44] = 1;
   out_8711821868833026606[45] = 0;
   out_8711821868833026606[46] = 0;
   out_8711821868833026606[47] = 0;
   out_8711821868833026606[48] = 0;
   out_8711821868833026606[49] = 0;
   out_8711821868833026606[50] = dt;
   out_8711821868833026606[51] = 0;
   out_8711821868833026606[52] = 0;
   out_8711821868833026606[53] = 0;
   out_8711821868833026606[54] = 0;
   out_8711821868833026606[55] = 0;
   out_8711821868833026606[56] = 0;
   out_8711821868833026606[57] = 0;
   out_8711821868833026606[58] = 0;
   out_8711821868833026606[59] = 0;
   out_8711821868833026606[60] = 0;
   out_8711821868833026606[61] = 0;
   out_8711821868833026606[62] = 0;
   out_8711821868833026606[63] = 0;
   out_8711821868833026606[64] = 0;
   out_8711821868833026606[65] = 0;
   out_8711821868833026606[66] = 1;
   out_8711821868833026606[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8711821868833026606[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8711821868833026606[69] = 0;
   out_8711821868833026606[70] = 0;
   out_8711821868833026606[71] = 0;
   out_8711821868833026606[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8711821868833026606[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8711821868833026606[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8711821868833026606[75] = 0;
   out_8711821868833026606[76] = 0;
   out_8711821868833026606[77] = 0;
   out_8711821868833026606[78] = 0;
   out_8711821868833026606[79] = 0;
   out_8711821868833026606[80] = 0;
   out_8711821868833026606[81] = 0;
   out_8711821868833026606[82] = 0;
   out_8711821868833026606[83] = 0;
   out_8711821868833026606[84] = 0;
   out_8711821868833026606[85] = 0;
   out_8711821868833026606[86] = 0;
   out_8711821868833026606[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8711821868833026606[88] = 1;
   out_8711821868833026606[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8711821868833026606[90] = 0;
   out_8711821868833026606[91] = 0;
   out_8711821868833026606[92] = 0;
   out_8711821868833026606[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8711821868833026606[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8711821868833026606[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8711821868833026606[96] = 0;
   out_8711821868833026606[97] = 0;
   out_8711821868833026606[98] = 0;
   out_8711821868833026606[99] = 0;
   out_8711821868833026606[100] = 0;
   out_8711821868833026606[101] = 0;
   out_8711821868833026606[102] = 0;
   out_8711821868833026606[103] = 0;
   out_8711821868833026606[104] = 0;
   out_8711821868833026606[105] = 0;
   out_8711821868833026606[106] = 0;
   out_8711821868833026606[107] = 0;
   out_8711821868833026606[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8711821868833026606[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8711821868833026606[110] = 1;
   out_8711821868833026606[111] = 0;
   out_8711821868833026606[112] = 0;
   out_8711821868833026606[113] = 0;
   out_8711821868833026606[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8711821868833026606[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8711821868833026606[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8711821868833026606[117] = 0;
   out_8711821868833026606[118] = 0;
   out_8711821868833026606[119] = 0;
   out_8711821868833026606[120] = 0;
   out_8711821868833026606[121] = 0;
   out_8711821868833026606[122] = 0;
   out_8711821868833026606[123] = 0;
   out_8711821868833026606[124] = 0;
   out_8711821868833026606[125] = 0;
   out_8711821868833026606[126] = 0;
   out_8711821868833026606[127] = 0;
   out_8711821868833026606[128] = 0;
   out_8711821868833026606[129] = 0;
   out_8711821868833026606[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8711821868833026606[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8711821868833026606[132] = 1;
   out_8711821868833026606[133] = 0;
   out_8711821868833026606[134] = 0;
   out_8711821868833026606[135] = 0;
   out_8711821868833026606[136] = 0;
   out_8711821868833026606[137] = 0;
   out_8711821868833026606[138] = 0;
   out_8711821868833026606[139] = 0;
   out_8711821868833026606[140] = 0;
   out_8711821868833026606[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8711821868833026606[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8711821868833026606[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8711821868833026606[144] = 0;
   out_8711821868833026606[145] = 0;
   out_8711821868833026606[146] = 0;
   out_8711821868833026606[147] = 0;
   out_8711821868833026606[148] = 0;
   out_8711821868833026606[149] = 0;
   out_8711821868833026606[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8711821868833026606[151] = 0;
   out_8711821868833026606[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8711821868833026606[153] = 0;
   out_8711821868833026606[154] = 1;
   out_8711821868833026606[155] = 0;
   out_8711821868833026606[156] = 0;
   out_8711821868833026606[157] = 0;
   out_8711821868833026606[158] = 0;
   out_8711821868833026606[159] = 0;
   out_8711821868833026606[160] = 0;
   out_8711821868833026606[161] = 0;
   out_8711821868833026606[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8711821868833026606[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8711821868833026606[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8711821868833026606[165] = 0;
   out_8711821868833026606[166] = 0;
   out_8711821868833026606[167] = 0;
   out_8711821868833026606[168] = 0;
   out_8711821868833026606[169] = 0;
   out_8711821868833026606[170] = 0;
   out_8711821868833026606[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8711821868833026606[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8711821868833026606[173] = 0;
   out_8711821868833026606[174] = 0;
   out_8711821868833026606[175] = 0;
   out_8711821868833026606[176] = 1;
   out_8711821868833026606[177] = 0;
   out_8711821868833026606[178] = 0;
   out_8711821868833026606[179] = 0;
   out_8711821868833026606[180] = 0;
   out_8711821868833026606[181] = 0;
   out_8711821868833026606[182] = 0;
   out_8711821868833026606[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8711821868833026606[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8711821868833026606[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8711821868833026606[186] = 0;
   out_8711821868833026606[187] = 0;
   out_8711821868833026606[188] = 0;
   out_8711821868833026606[189] = 0;
   out_8711821868833026606[190] = 0;
   out_8711821868833026606[191] = 0;
   out_8711821868833026606[192] = 0;
   out_8711821868833026606[193] = 0;
   out_8711821868833026606[194] = 0;
   out_8711821868833026606[195] = 0;
   out_8711821868833026606[196] = 0;
   out_8711821868833026606[197] = 0;
   out_8711821868833026606[198] = 1;
   out_8711821868833026606[199] = 0;
   out_8711821868833026606[200] = 0;
   out_8711821868833026606[201] = 0;
   out_8711821868833026606[202] = 0;
   out_8711821868833026606[203] = 0;
   out_8711821868833026606[204] = 0;
   out_8711821868833026606[205] = 0;
   out_8711821868833026606[206] = 0;
   out_8711821868833026606[207] = 0;
   out_8711821868833026606[208] = 0;
   out_8711821868833026606[209] = 0;
   out_8711821868833026606[210] = 0;
   out_8711821868833026606[211] = 0;
   out_8711821868833026606[212] = 0;
   out_8711821868833026606[213] = 0;
   out_8711821868833026606[214] = 0;
   out_8711821868833026606[215] = 0;
   out_8711821868833026606[216] = 0;
   out_8711821868833026606[217] = 0;
   out_8711821868833026606[218] = 0;
   out_8711821868833026606[219] = 0;
   out_8711821868833026606[220] = 1;
   out_8711821868833026606[221] = 0;
   out_8711821868833026606[222] = 0;
   out_8711821868833026606[223] = 0;
   out_8711821868833026606[224] = 0;
   out_8711821868833026606[225] = 0;
   out_8711821868833026606[226] = 0;
   out_8711821868833026606[227] = 0;
   out_8711821868833026606[228] = 0;
   out_8711821868833026606[229] = 0;
   out_8711821868833026606[230] = 0;
   out_8711821868833026606[231] = 0;
   out_8711821868833026606[232] = 0;
   out_8711821868833026606[233] = 0;
   out_8711821868833026606[234] = 0;
   out_8711821868833026606[235] = 0;
   out_8711821868833026606[236] = 0;
   out_8711821868833026606[237] = 0;
   out_8711821868833026606[238] = 0;
   out_8711821868833026606[239] = 0;
   out_8711821868833026606[240] = 0;
   out_8711821868833026606[241] = 0;
   out_8711821868833026606[242] = 1;
   out_8711821868833026606[243] = 0;
   out_8711821868833026606[244] = 0;
   out_8711821868833026606[245] = 0;
   out_8711821868833026606[246] = 0;
   out_8711821868833026606[247] = 0;
   out_8711821868833026606[248] = 0;
   out_8711821868833026606[249] = 0;
   out_8711821868833026606[250] = 0;
   out_8711821868833026606[251] = 0;
   out_8711821868833026606[252] = 0;
   out_8711821868833026606[253] = 0;
   out_8711821868833026606[254] = 0;
   out_8711821868833026606[255] = 0;
   out_8711821868833026606[256] = 0;
   out_8711821868833026606[257] = 0;
   out_8711821868833026606[258] = 0;
   out_8711821868833026606[259] = 0;
   out_8711821868833026606[260] = 0;
   out_8711821868833026606[261] = 0;
   out_8711821868833026606[262] = 0;
   out_8711821868833026606[263] = 0;
   out_8711821868833026606[264] = 1;
   out_8711821868833026606[265] = 0;
   out_8711821868833026606[266] = 0;
   out_8711821868833026606[267] = 0;
   out_8711821868833026606[268] = 0;
   out_8711821868833026606[269] = 0;
   out_8711821868833026606[270] = 0;
   out_8711821868833026606[271] = 0;
   out_8711821868833026606[272] = 0;
   out_8711821868833026606[273] = 0;
   out_8711821868833026606[274] = 0;
   out_8711821868833026606[275] = 0;
   out_8711821868833026606[276] = 0;
   out_8711821868833026606[277] = 0;
   out_8711821868833026606[278] = 0;
   out_8711821868833026606[279] = 0;
   out_8711821868833026606[280] = 0;
   out_8711821868833026606[281] = 0;
   out_8711821868833026606[282] = 0;
   out_8711821868833026606[283] = 0;
   out_8711821868833026606[284] = 0;
   out_8711821868833026606[285] = 0;
   out_8711821868833026606[286] = 1;
   out_8711821868833026606[287] = 0;
   out_8711821868833026606[288] = 0;
   out_8711821868833026606[289] = 0;
   out_8711821868833026606[290] = 0;
   out_8711821868833026606[291] = 0;
   out_8711821868833026606[292] = 0;
   out_8711821868833026606[293] = 0;
   out_8711821868833026606[294] = 0;
   out_8711821868833026606[295] = 0;
   out_8711821868833026606[296] = 0;
   out_8711821868833026606[297] = 0;
   out_8711821868833026606[298] = 0;
   out_8711821868833026606[299] = 0;
   out_8711821868833026606[300] = 0;
   out_8711821868833026606[301] = 0;
   out_8711821868833026606[302] = 0;
   out_8711821868833026606[303] = 0;
   out_8711821868833026606[304] = 0;
   out_8711821868833026606[305] = 0;
   out_8711821868833026606[306] = 0;
   out_8711821868833026606[307] = 0;
   out_8711821868833026606[308] = 1;
   out_8711821868833026606[309] = 0;
   out_8711821868833026606[310] = 0;
   out_8711821868833026606[311] = 0;
   out_8711821868833026606[312] = 0;
   out_8711821868833026606[313] = 0;
   out_8711821868833026606[314] = 0;
   out_8711821868833026606[315] = 0;
   out_8711821868833026606[316] = 0;
   out_8711821868833026606[317] = 0;
   out_8711821868833026606[318] = 0;
   out_8711821868833026606[319] = 0;
   out_8711821868833026606[320] = 0;
   out_8711821868833026606[321] = 0;
   out_8711821868833026606[322] = 0;
   out_8711821868833026606[323] = 0;
   out_8711821868833026606[324] = 0;
   out_8711821868833026606[325] = 0;
   out_8711821868833026606[326] = 0;
   out_8711821868833026606[327] = 0;
   out_8711821868833026606[328] = 0;
   out_8711821868833026606[329] = 0;
   out_8711821868833026606[330] = 1;
   out_8711821868833026606[331] = 0;
   out_8711821868833026606[332] = 0;
   out_8711821868833026606[333] = 0;
   out_8711821868833026606[334] = 0;
   out_8711821868833026606[335] = 0;
   out_8711821868833026606[336] = 0;
   out_8711821868833026606[337] = 0;
   out_8711821868833026606[338] = 0;
   out_8711821868833026606[339] = 0;
   out_8711821868833026606[340] = 0;
   out_8711821868833026606[341] = 0;
   out_8711821868833026606[342] = 0;
   out_8711821868833026606[343] = 0;
   out_8711821868833026606[344] = 0;
   out_8711821868833026606[345] = 0;
   out_8711821868833026606[346] = 0;
   out_8711821868833026606[347] = 0;
   out_8711821868833026606[348] = 0;
   out_8711821868833026606[349] = 0;
   out_8711821868833026606[350] = 0;
   out_8711821868833026606[351] = 0;
   out_8711821868833026606[352] = 1;
   out_8711821868833026606[353] = 0;
   out_8711821868833026606[354] = 0;
   out_8711821868833026606[355] = 0;
   out_8711821868833026606[356] = 0;
   out_8711821868833026606[357] = 0;
   out_8711821868833026606[358] = 0;
   out_8711821868833026606[359] = 0;
   out_8711821868833026606[360] = 0;
   out_8711821868833026606[361] = 0;
   out_8711821868833026606[362] = 0;
   out_8711821868833026606[363] = 0;
   out_8711821868833026606[364] = 0;
   out_8711821868833026606[365] = 0;
   out_8711821868833026606[366] = 0;
   out_8711821868833026606[367] = 0;
   out_8711821868833026606[368] = 0;
   out_8711821868833026606[369] = 0;
   out_8711821868833026606[370] = 0;
   out_8711821868833026606[371] = 0;
   out_8711821868833026606[372] = 0;
   out_8711821868833026606[373] = 0;
   out_8711821868833026606[374] = 1;
   out_8711821868833026606[375] = 0;
   out_8711821868833026606[376] = 0;
   out_8711821868833026606[377] = 0;
   out_8711821868833026606[378] = 0;
   out_8711821868833026606[379] = 0;
   out_8711821868833026606[380] = 0;
   out_8711821868833026606[381] = 0;
   out_8711821868833026606[382] = 0;
   out_8711821868833026606[383] = 0;
   out_8711821868833026606[384] = 0;
   out_8711821868833026606[385] = 0;
   out_8711821868833026606[386] = 0;
   out_8711821868833026606[387] = 0;
   out_8711821868833026606[388] = 0;
   out_8711821868833026606[389] = 0;
   out_8711821868833026606[390] = 0;
   out_8711821868833026606[391] = 0;
   out_8711821868833026606[392] = 0;
   out_8711821868833026606[393] = 0;
   out_8711821868833026606[394] = 0;
   out_8711821868833026606[395] = 0;
   out_8711821868833026606[396] = 1;
   out_8711821868833026606[397] = 0;
   out_8711821868833026606[398] = 0;
   out_8711821868833026606[399] = 0;
   out_8711821868833026606[400] = 0;
   out_8711821868833026606[401] = 0;
   out_8711821868833026606[402] = 0;
   out_8711821868833026606[403] = 0;
   out_8711821868833026606[404] = 0;
   out_8711821868833026606[405] = 0;
   out_8711821868833026606[406] = 0;
   out_8711821868833026606[407] = 0;
   out_8711821868833026606[408] = 0;
   out_8711821868833026606[409] = 0;
   out_8711821868833026606[410] = 0;
   out_8711821868833026606[411] = 0;
   out_8711821868833026606[412] = 0;
   out_8711821868833026606[413] = 0;
   out_8711821868833026606[414] = 0;
   out_8711821868833026606[415] = 0;
   out_8711821868833026606[416] = 0;
   out_8711821868833026606[417] = 0;
   out_8711821868833026606[418] = 1;
   out_8711821868833026606[419] = 0;
   out_8711821868833026606[420] = 0;
   out_8711821868833026606[421] = 0;
   out_8711821868833026606[422] = 0;
   out_8711821868833026606[423] = 0;
   out_8711821868833026606[424] = 0;
   out_8711821868833026606[425] = 0;
   out_8711821868833026606[426] = 0;
   out_8711821868833026606[427] = 0;
   out_8711821868833026606[428] = 0;
   out_8711821868833026606[429] = 0;
   out_8711821868833026606[430] = 0;
   out_8711821868833026606[431] = 0;
   out_8711821868833026606[432] = 0;
   out_8711821868833026606[433] = 0;
   out_8711821868833026606[434] = 0;
   out_8711821868833026606[435] = 0;
   out_8711821868833026606[436] = 0;
   out_8711821868833026606[437] = 0;
   out_8711821868833026606[438] = 0;
   out_8711821868833026606[439] = 0;
   out_8711821868833026606[440] = 1;
}
void h_4(double *state, double *unused, double *out_6699434746503508921) {
   out_6699434746503508921[0] = state[10] + state[13];
   out_6699434746503508921[1] = state[11] + state[14];
   out_6699434746503508921[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4765815366198060142) {
   out_4765815366198060142[0] = 0;
   out_4765815366198060142[1] = 0;
   out_4765815366198060142[2] = 0;
   out_4765815366198060142[3] = 0;
   out_4765815366198060142[4] = 0;
   out_4765815366198060142[5] = 0;
   out_4765815366198060142[6] = 0;
   out_4765815366198060142[7] = 0;
   out_4765815366198060142[8] = 0;
   out_4765815366198060142[9] = 0;
   out_4765815366198060142[10] = 1;
   out_4765815366198060142[11] = 0;
   out_4765815366198060142[12] = 0;
   out_4765815366198060142[13] = 1;
   out_4765815366198060142[14] = 0;
   out_4765815366198060142[15] = 0;
   out_4765815366198060142[16] = 0;
   out_4765815366198060142[17] = 0;
   out_4765815366198060142[18] = 0;
   out_4765815366198060142[19] = 0;
   out_4765815366198060142[20] = 0;
   out_4765815366198060142[21] = 0;
   out_4765815366198060142[22] = 0;
   out_4765815366198060142[23] = 0;
   out_4765815366198060142[24] = 0;
   out_4765815366198060142[25] = 0;
   out_4765815366198060142[26] = 0;
   out_4765815366198060142[27] = 0;
   out_4765815366198060142[28] = 0;
   out_4765815366198060142[29] = 0;
   out_4765815366198060142[30] = 0;
   out_4765815366198060142[31] = 0;
   out_4765815366198060142[32] = 0;
   out_4765815366198060142[33] = 1;
   out_4765815366198060142[34] = 0;
   out_4765815366198060142[35] = 0;
   out_4765815366198060142[36] = 1;
   out_4765815366198060142[37] = 0;
   out_4765815366198060142[38] = 0;
   out_4765815366198060142[39] = 0;
   out_4765815366198060142[40] = 0;
   out_4765815366198060142[41] = 0;
   out_4765815366198060142[42] = 0;
   out_4765815366198060142[43] = 0;
   out_4765815366198060142[44] = 0;
   out_4765815366198060142[45] = 0;
   out_4765815366198060142[46] = 0;
   out_4765815366198060142[47] = 0;
   out_4765815366198060142[48] = 0;
   out_4765815366198060142[49] = 0;
   out_4765815366198060142[50] = 0;
   out_4765815366198060142[51] = 0;
   out_4765815366198060142[52] = 0;
   out_4765815366198060142[53] = 0;
   out_4765815366198060142[54] = 0;
   out_4765815366198060142[55] = 0;
   out_4765815366198060142[56] = 1;
   out_4765815366198060142[57] = 0;
   out_4765815366198060142[58] = 0;
   out_4765815366198060142[59] = 1;
   out_4765815366198060142[60] = 0;
   out_4765815366198060142[61] = 0;
   out_4765815366198060142[62] = 0;
   out_4765815366198060142[63] = 0;
   out_4765815366198060142[64] = 0;
   out_4765815366198060142[65] = 0;
}
void h_9(double *state, double *unused, double *out_2938772362047964784) {
   out_2938772362047964784[0] = state[10];
   out_2938772362047964784[1] = state[11];
   out_2938772362047964784[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2521403569066387328) {
   out_2521403569066387328[0] = 0;
   out_2521403569066387328[1] = 0;
   out_2521403569066387328[2] = 0;
   out_2521403569066387328[3] = 0;
   out_2521403569066387328[4] = 0;
   out_2521403569066387328[5] = 0;
   out_2521403569066387328[6] = 0;
   out_2521403569066387328[7] = 0;
   out_2521403569066387328[8] = 0;
   out_2521403569066387328[9] = 0;
   out_2521403569066387328[10] = 1;
   out_2521403569066387328[11] = 0;
   out_2521403569066387328[12] = 0;
   out_2521403569066387328[13] = 0;
   out_2521403569066387328[14] = 0;
   out_2521403569066387328[15] = 0;
   out_2521403569066387328[16] = 0;
   out_2521403569066387328[17] = 0;
   out_2521403569066387328[18] = 0;
   out_2521403569066387328[19] = 0;
   out_2521403569066387328[20] = 0;
   out_2521403569066387328[21] = 0;
   out_2521403569066387328[22] = 0;
   out_2521403569066387328[23] = 0;
   out_2521403569066387328[24] = 0;
   out_2521403569066387328[25] = 0;
   out_2521403569066387328[26] = 0;
   out_2521403569066387328[27] = 0;
   out_2521403569066387328[28] = 0;
   out_2521403569066387328[29] = 0;
   out_2521403569066387328[30] = 0;
   out_2521403569066387328[31] = 0;
   out_2521403569066387328[32] = 0;
   out_2521403569066387328[33] = 1;
   out_2521403569066387328[34] = 0;
   out_2521403569066387328[35] = 0;
   out_2521403569066387328[36] = 0;
   out_2521403569066387328[37] = 0;
   out_2521403569066387328[38] = 0;
   out_2521403569066387328[39] = 0;
   out_2521403569066387328[40] = 0;
   out_2521403569066387328[41] = 0;
   out_2521403569066387328[42] = 0;
   out_2521403569066387328[43] = 0;
   out_2521403569066387328[44] = 0;
   out_2521403569066387328[45] = 0;
   out_2521403569066387328[46] = 0;
   out_2521403569066387328[47] = 0;
   out_2521403569066387328[48] = 0;
   out_2521403569066387328[49] = 0;
   out_2521403569066387328[50] = 0;
   out_2521403569066387328[51] = 0;
   out_2521403569066387328[52] = 0;
   out_2521403569066387328[53] = 0;
   out_2521403569066387328[54] = 0;
   out_2521403569066387328[55] = 0;
   out_2521403569066387328[56] = 1;
   out_2521403569066387328[57] = 0;
   out_2521403569066387328[58] = 0;
   out_2521403569066387328[59] = 0;
   out_2521403569066387328[60] = 0;
   out_2521403569066387328[61] = 0;
   out_2521403569066387328[62] = 0;
   out_2521403569066387328[63] = 0;
   out_2521403569066387328[64] = 0;
   out_2521403569066387328[65] = 0;
}
void h_10(double *state, double *unused, double *out_572592492373180910) {
   out_572592492373180910[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_572592492373180910[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_572592492373180910[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5831623508457838178) {
   out_5831623508457838178[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5831623508457838178[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5831623508457838178[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5831623508457838178[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5831623508457838178[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5831623508457838178[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5831623508457838178[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5831623508457838178[7] = 0;
   out_5831623508457838178[8] = 0;
   out_5831623508457838178[9] = 0;
   out_5831623508457838178[10] = 0;
   out_5831623508457838178[11] = 0;
   out_5831623508457838178[12] = 0;
   out_5831623508457838178[13] = 0;
   out_5831623508457838178[14] = 0;
   out_5831623508457838178[15] = 0;
   out_5831623508457838178[16] = 1;
   out_5831623508457838178[17] = 0;
   out_5831623508457838178[18] = 0;
   out_5831623508457838178[19] = 1;
   out_5831623508457838178[20] = 0;
   out_5831623508457838178[21] = 0;
   out_5831623508457838178[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5831623508457838178[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5831623508457838178[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5831623508457838178[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5831623508457838178[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5831623508457838178[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5831623508457838178[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5831623508457838178[29] = 0;
   out_5831623508457838178[30] = 0;
   out_5831623508457838178[31] = 0;
   out_5831623508457838178[32] = 0;
   out_5831623508457838178[33] = 0;
   out_5831623508457838178[34] = 0;
   out_5831623508457838178[35] = 0;
   out_5831623508457838178[36] = 0;
   out_5831623508457838178[37] = 0;
   out_5831623508457838178[38] = 0;
   out_5831623508457838178[39] = 1;
   out_5831623508457838178[40] = 0;
   out_5831623508457838178[41] = 0;
   out_5831623508457838178[42] = 1;
   out_5831623508457838178[43] = 0;
   out_5831623508457838178[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5831623508457838178[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5831623508457838178[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5831623508457838178[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5831623508457838178[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5831623508457838178[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5831623508457838178[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5831623508457838178[51] = 0;
   out_5831623508457838178[52] = 0;
   out_5831623508457838178[53] = 0;
   out_5831623508457838178[54] = 0;
   out_5831623508457838178[55] = 0;
   out_5831623508457838178[56] = 0;
   out_5831623508457838178[57] = 0;
   out_5831623508457838178[58] = 0;
   out_5831623508457838178[59] = 0;
   out_5831623508457838178[60] = 0;
   out_5831623508457838178[61] = 0;
   out_5831623508457838178[62] = 1;
   out_5831623508457838178[63] = 0;
   out_5831623508457838178[64] = 0;
   out_5831623508457838178[65] = 1;
}
void h_12(double *state, double *unused, double *out_6087461880107305338) {
   out_6087461880107305338[0] = state[0];
   out_6087461880107305338[1] = state[1];
   out_6087461880107305338[2] = state[2];
}
void H_12(double *state, double *unused, double *out_253641041833901653) {
   out_253641041833901653[0] = 1;
   out_253641041833901653[1] = 0;
   out_253641041833901653[2] = 0;
   out_253641041833901653[3] = 0;
   out_253641041833901653[4] = 0;
   out_253641041833901653[5] = 0;
   out_253641041833901653[6] = 0;
   out_253641041833901653[7] = 0;
   out_253641041833901653[8] = 0;
   out_253641041833901653[9] = 0;
   out_253641041833901653[10] = 0;
   out_253641041833901653[11] = 0;
   out_253641041833901653[12] = 0;
   out_253641041833901653[13] = 0;
   out_253641041833901653[14] = 0;
   out_253641041833901653[15] = 0;
   out_253641041833901653[16] = 0;
   out_253641041833901653[17] = 0;
   out_253641041833901653[18] = 0;
   out_253641041833901653[19] = 0;
   out_253641041833901653[20] = 0;
   out_253641041833901653[21] = 0;
   out_253641041833901653[22] = 0;
   out_253641041833901653[23] = 1;
   out_253641041833901653[24] = 0;
   out_253641041833901653[25] = 0;
   out_253641041833901653[26] = 0;
   out_253641041833901653[27] = 0;
   out_253641041833901653[28] = 0;
   out_253641041833901653[29] = 0;
   out_253641041833901653[30] = 0;
   out_253641041833901653[31] = 0;
   out_253641041833901653[32] = 0;
   out_253641041833901653[33] = 0;
   out_253641041833901653[34] = 0;
   out_253641041833901653[35] = 0;
   out_253641041833901653[36] = 0;
   out_253641041833901653[37] = 0;
   out_253641041833901653[38] = 0;
   out_253641041833901653[39] = 0;
   out_253641041833901653[40] = 0;
   out_253641041833901653[41] = 0;
   out_253641041833901653[42] = 0;
   out_253641041833901653[43] = 0;
   out_253641041833901653[44] = 0;
   out_253641041833901653[45] = 0;
   out_253641041833901653[46] = 1;
   out_253641041833901653[47] = 0;
   out_253641041833901653[48] = 0;
   out_253641041833901653[49] = 0;
   out_253641041833901653[50] = 0;
   out_253641041833901653[51] = 0;
   out_253641041833901653[52] = 0;
   out_253641041833901653[53] = 0;
   out_253641041833901653[54] = 0;
   out_253641041833901653[55] = 0;
   out_253641041833901653[56] = 0;
   out_253641041833901653[57] = 0;
   out_253641041833901653[58] = 0;
   out_253641041833901653[59] = 0;
   out_253641041833901653[60] = 0;
   out_253641041833901653[61] = 0;
   out_253641041833901653[62] = 0;
   out_253641041833901653[63] = 0;
   out_253641041833901653[64] = 0;
   out_253641041833901653[65] = 0;
}
void h_31(double *state, double *unused, double *out_6848381938966983359) {
   out_6848381938966983359[0] = state[7];
   out_6848381938966983359[1] = state[8];
   out_6848381938966983359[2] = state[9];
}
void H_31(double *state, double *unused, double *out_1399153308825452766) {
   out_1399153308825452766[0] = 0;
   out_1399153308825452766[1] = 0;
   out_1399153308825452766[2] = 0;
   out_1399153308825452766[3] = 0;
   out_1399153308825452766[4] = 0;
   out_1399153308825452766[5] = 0;
   out_1399153308825452766[6] = 0;
   out_1399153308825452766[7] = 1;
   out_1399153308825452766[8] = 0;
   out_1399153308825452766[9] = 0;
   out_1399153308825452766[10] = 0;
   out_1399153308825452766[11] = 0;
   out_1399153308825452766[12] = 0;
   out_1399153308825452766[13] = 0;
   out_1399153308825452766[14] = 0;
   out_1399153308825452766[15] = 0;
   out_1399153308825452766[16] = 0;
   out_1399153308825452766[17] = 0;
   out_1399153308825452766[18] = 0;
   out_1399153308825452766[19] = 0;
   out_1399153308825452766[20] = 0;
   out_1399153308825452766[21] = 0;
   out_1399153308825452766[22] = 0;
   out_1399153308825452766[23] = 0;
   out_1399153308825452766[24] = 0;
   out_1399153308825452766[25] = 0;
   out_1399153308825452766[26] = 0;
   out_1399153308825452766[27] = 0;
   out_1399153308825452766[28] = 0;
   out_1399153308825452766[29] = 0;
   out_1399153308825452766[30] = 1;
   out_1399153308825452766[31] = 0;
   out_1399153308825452766[32] = 0;
   out_1399153308825452766[33] = 0;
   out_1399153308825452766[34] = 0;
   out_1399153308825452766[35] = 0;
   out_1399153308825452766[36] = 0;
   out_1399153308825452766[37] = 0;
   out_1399153308825452766[38] = 0;
   out_1399153308825452766[39] = 0;
   out_1399153308825452766[40] = 0;
   out_1399153308825452766[41] = 0;
   out_1399153308825452766[42] = 0;
   out_1399153308825452766[43] = 0;
   out_1399153308825452766[44] = 0;
   out_1399153308825452766[45] = 0;
   out_1399153308825452766[46] = 0;
   out_1399153308825452766[47] = 0;
   out_1399153308825452766[48] = 0;
   out_1399153308825452766[49] = 0;
   out_1399153308825452766[50] = 0;
   out_1399153308825452766[51] = 0;
   out_1399153308825452766[52] = 0;
   out_1399153308825452766[53] = 1;
   out_1399153308825452766[54] = 0;
   out_1399153308825452766[55] = 0;
   out_1399153308825452766[56] = 0;
   out_1399153308825452766[57] = 0;
   out_1399153308825452766[58] = 0;
   out_1399153308825452766[59] = 0;
   out_1399153308825452766[60] = 0;
   out_1399153308825452766[61] = 0;
   out_1399153308825452766[62] = 0;
   out_1399153308825452766[63] = 0;
   out_1399153308825452766[64] = 0;
   out_1399153308825452766[65] = 0;
}
void h_32(double *state, double *unused, double *out_5512723683214713035) {
   out_5512723683214713035[0] = state[3];
   out_5512723683214713035[1] = state[4];
   out_5512723683214713035[2] = state[5];
   out_5512723683214713035[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1267988523884712297) {
   out_1267988523884712297[0] = 0;
   out_1267988523884712297[1] = 0;
   out_1267988523884712297[2] = 0;
   out_1267988523884712297[3] = 1;
   out_1267988523884712297[4] = 0;
   out_1267988523884712297[5] = 0;
   out_1267988523884712297[6] = 0;
   out_1267988523884712297[7] = 0;
   out_1267988523884712297[8] = 0;
   out_1267988523884712297[9] = 0;
   out_1267988523884712297[10] = 0;
   out_1267988523884712297[11] = 0;
   out_1267988523884712297[12] = 0;
   out_1267988523884712297[13] = 0;
   out_1267988523884712297[14] = 0;
   out_1267988523884712297[15] = 0;
   out_1267988523884712297[16] = 0;
   out_1267988523884712297[17] = 0;
   out_1267988523884712297[18] = 0;
   out_1267988523884712297[19] = 0;
   out_1267988523884712297[20] = 0;
   out_1267988523884712297[21] = 0;
   out_1267988523884712297[22] = 0;
   out_1267988523884712297[23] = 0;
   out_1267988523884712297[24] = 0;
   out_1267988523884712297[25] = 0;
   out_1267988523884712297[26] = 1;
   out_1267988523884712297[27] = 0;
   out_1267988523884712297[28] = 0;
   out_1267988523884712297[29] = 0;
   out_1267988523884712297[30] = 0;
   out_1267988523884712297[31] = 0;
   out_1267988523884712297[32] = 0;
   out_1267988523884712297[33] = 0;
   out_1267988523884712297[34] = 0;
   out_1267988523884712297[35] = 0;
   out_1267988523884712297[36] = 0;
   out_1267988523884712297[37] = 0;
   out_1267988523884712297[38] = 0;
   out_1267988523884712297[39] = 0;
   out_1267988523884712297[40] = 0;
   out_1267988523884712297[41] = 0;
   out_1267988523884712297[42] = 0;
   out_1267988523884712297[43] = 0;
   out_1267988523884712297[44] = 0;
   out_1267988523884712297[45] = 0;
   out_1267988523884712297[46] = 0;
   out_1267988523884712297[47] = 0;
   out_1267988523884712297[48] = 0;
   out_1267988523884712297[49] = 1;
   out_1267988523884712297[50] = 0;
   out_1267988523884712297[51] = 0;
   out_1267988523884712297[52] = 0;
   out_1267988523884712297[53] = 0;
   out_1267988523884712297[54] = 0;
   out_1267988523884712297[55] = 0;
   out_1267988523884712297[56] = 0;
   out_1267988523884712297[57] = 0;
   out_1267988523884712297[58] = 0;
   out_1267988523884712297[59] = 0;
   out_1267988523884712297[60] = 0;
   out_1267988523884712297[61] = 0;
   out_1267988523884712297[62] = 0;
   out_1267988523884712297[63] = 0;
   out_1267988523884712297[64] = 0;
   out_1267988523884712297[65] = 0;
   out_1267988523884712297[66] = 0;
   out_1267988523884712297[67] = 0;
   out_1267988523884712297[68] = 0;
   out_1267988523884712297[69] = 0;
   out_1267988523884712297[70] = 0;
   out_1267988523884712297[71] = 0;
   out_1267988523884712297[72] = 1;
   out_1267988523884712297[73] = 0;
   out_1267988523884712297[74] = 0;
   out_1267988523884712297[75] = 0;
   out_1267988523884712297[76] = 0;
   out_1267988523884712297[77] = 0;
   out_1267988523884712297[78] = 0;
   out_1267988523884712297[79] = 0;
   out_1267988523884712297[80] = 0;
   out_1267988523884712297[81] = 0;
   out_1267988523884712297[82] = 0;
   out_1267988523884712297[83] = 0;
   out_1267988523884712297[84] = 0;
   out_1267988523884712297[85] = 0;
   out_1267988523884712297[86] = 0;
   out_1267988523884712297[87] = 0;
}
void h_13(double *state, double *unused, double *out_8440708348654386059) {
   out_8440708348654386059[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8440708348654386059[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8440708348654386059[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5914274422995110640) {
   out_5914274422995110640[0] = 0;
   out_5914274422995110640[1] = 0;
   out_5914274422995110640[2] = 0;
   out_5914274422995110640[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5914274422995110640[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5914274422995110640[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5914274422995110640[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5914274422995110640[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5914274422995110640[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5914274422995110640[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5914274422995110640[10] = 0;
   out_5914274422995110640[11] = 0;
   out_5914274422995110640[12] = 0;
   out_5914274422995110640[13] = 0;
   out_5914274422995110640[14] = 0;
   out_5914274422995110640[15] = 0;
   out_5914274422995110640[16] = 0;
   out_5914274422995110640[17] = 0;
   out_5914274422995110640[18] = 0;
   out_5914274422995110640[19] = 0;
   out_5914274422995110640[20] = 0;
   out_5914274422995110640[21] = 0;
   out_5914274422995110640[22] = 0;
   out_5914274422995110640[23] = 0;
   out_5914274422995110640[24] = 0;
   out_5914274422995110640[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5914274422995110640[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5914274422995110640[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5914274422995110640[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5914274422995110640[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5914274422995110640[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5914274422995110640[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5914274422995110640[32] = 0;
   out_5914274422995110640[33] = 0;
   out_5914274422995110640[34] = 0;
   out_5914274422995110640[35] = 0;
   out_5914274422995110640[36] = 0;
   out_5914274422995110640[37] = 0;
   out_5914274422995110640[38] = 0;
   out_5914274422995110640[39] = 0;
   out_5914274422995110640[40] = 0;
   out_5914274422995110640[41] = 0;
   out_5914274422995110640[42] = 0;
   out_5914274422995110640[43] = 0;
   out_5914274422995110640[44] = 0;
   out_5914274422995110640[45] = 0;
   out_5914274422995110640[46] = 0;
   out_5914274422995110640[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5914274422995110640[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5914274422995110640[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5914274422995110640[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5914274422995110640[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5914274422995110640[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5914274422995110640[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5914274422995110640[54] = 0;
   out_5914274422995110640[55] = 0;
   out_5914274422995110640[56] = 0;
   out_5914274422995110640[57] = 0;
   out_5914274422995110640[58] = 0;
   out_5914274422995110640[59] = 0;
   out_5914274422995110640[60] = 0;
   out_5914274422995110640[61] = 0;
   out_5914274422995110640[62] = 0;
   out_5914274422995110640[63] = 0;
   out_5914274422995110640[64] = 0;
   out_5914274422995110640[65] = 0;
}
void h_14(double *state, double *unused, double *out_2938772362047964784) {
   out_2938772362047964784[0] = state[10];
   out_2938772362047964784[1] = state[11];
   out_2938772362047964784[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2521403569066387328) {
   out_2521403569066387328[0] = 0;
   out_2521403569066387328[1] = 0;
   out_2521403569066387328[2] = 0;
   out_2521403569066387328[3] = 0;
   out_2521403569066387328[4] = 0;
   out_2521403569066387328[5] = 0;
   out_2521403569066387328[6] = 0;
   out_2521403569066387328[7] = 0;
   out_2521403569066387328[8] = 0;
   out_2521403569066387328[9] = 0;
   out_2521403569066387328[10] = 1;
   out_2521403569066387328[11] = 0;
   out_2521403569066387328[12] = 0;
   out_2521403569066387328[13] = 0;
   out_2521403569066387328[14] = 0;
   out_2521403569066387328[15] = 0;
   out_2521403569066387328[16] = 0;
   out_2521403569066387328[17] = 0;
   out_2521403569066387328[18] = 0;
   out_2521403569066387328[19] = 0;
   out_2521403569066387328[20] = 0;
   out_2521403569066387328[21] = 0;
   out_2521403569066387328[22] = 0;
   out_2521403569066387328[23] = 0;
   out_2521403569066387328[24] = 0;
   out_2521403569066387328[25] = 0;
   out_2521403569066387328[26] = 0;
   out_2521403569066387328[27] = 0;
   out_2521403569066387328[28] = 0;
   out_2521403569066387328[29] = 0;
   out_2521403569066387328[30] = 0;
   out_2521403569066387328[31] = 0;
   out_2521403569066387328[32] = 0;
   out_2521403569066387328[33] = 1;
   out_2521403569066387328[34] = 0;
   out_2521403569066387328[35] = 0;
   out_2521403569066387328[36] = 0;
   out_2521403569066387328[37] = 0;
   out_2521403569066387328[38] = 0;
   out_2521403569066387328[39] = 0;
   out_2521403569066387328[40] = 0;
   out_2521403569066387328[41] = 0;
   out_2521403569066387328[42] = 0;
   out_2521403569066387328[43] = 0;
   out_2521403569066387328[44] = 0;
   out_2521403569066387328[45] = 0;
   out_2521403569066387328[46] = 0;
   out_2521403569066387328[47] = 0;
   out_2521403569066387328[48] = 0;
   out_2521403569066387328[49] = 0;
   out_2521403569066387328[50] = 0;
   out_2521403569066387328[51] = 0;
   out_2521403569066387328[52] = 0;
   out_2521403569066387328[53] = 0;
   out_2521403569066387328[54] = 0;
   out_2521403569066387328[55] = 0;
   out_2521403569066387328[56] = 1;
   out_2521403569066387328[57] = 0;
   out_2521403569066387328[58] = 0;
   out_2521403569066387328[59] = 0;
   out_2521403569066387328[60] = 0;
   out_2521403569066387328[61] = 0;
   out_2521403569066387328[62] = 0;
   out_2521403569066387328[63] = 0;
   out_2521403569066387328[64] = 0;
   out_2521403569066387328[65] = 0;
}
void h_33(double *state, double *unused, double *out_3995606346095382009) {
   out_3995606346095382009[0] = state[16];
   out_3995606346095382009[1] = state[17];
   out_3995606346095382009[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1751403695813404838) {
   out_1751403695813404838[0] = 0;
   out_1751403695813404838[1] = 0;
   out_1751403695813404838[2] = 0;
   out_1751403695813404838[3] = 0;
   out_1751403695813404838[4] = 0;
   out_1751403695813404838[5] = 0;
   out_1751403695813404838[6] = 0;
   out_1751403695813404838[7] = 0;
   out_1751403695813404838[8] = 0;
   out_1751403695813404838[9] = 0;
   out_1751403695813404838[10] = 0;
   out_1751403695813404838[11] = 0;
   out_1751403695813404838[12] = 0;
   out_1751403695813404838[13] = 0;
   out_1751403695813404838[14] = 0;
   out_1751403695813404838[15] = 0;
   out_1751403695813404838[16] = 1;
   out_1751403695813404838[17] = 0;
   out_1751403695813404838[18] = 0;
   out_1751403695813404838[19] = 0;
   out_1751403695813404838[20] = 0;
   out_1751403695813404838[21] = 0;
   out_1751403695813404838[22] = 0;
   out_1751403695813404838[23] = 0;
   out_1751403695813404838[24] = 0;
   out_1751403695813404838[25] = 0;
   out_1751403695813404838[26] = 0;
   out_1751403695813404838[27] = 0;
   out_1751403695813404838[28] = 0;
   out_1751403695813404838[29] = 0;
   out_1751403695813404838[30] = 0;
   out_1751403695813404838[31] = 0;
   out_1751403695813404838[32] = 0;
   out_1751403695813404838[33] = 0;
   out_1751403695813404838[34] = 0;
   out_1751403695813404838[35] = 0;
   out_1751403695813404838[36] = 0;
   out_1751403695813404838[37] = 0;
   out_1751403695813404838[38] = 0;
   out_1751403695813404838[39] = 1;
   out_1751403695813404838[40] = 0;
   out_1751403695813404838[41] = 0;
   out_1751403695813404838[42] = 0;
   out_1751403695813404838[43] = 0;
   out_1751403695813404838[44] = 0;
   out_1751403695813404838[45] = 0;
   out_1751403695813404838[46] = 0;
   out_1751403695813404838[47] = 0;
   out_1751403695813404838[48] = 0;
   out_1751403695813404838[49] = 0;
   out_1751403695813404838[50] = 0;
   out_1751403695813404838[51] = 0;
   out_1751403695813404838[52] = 0;
   out_1751403695813404838[53] = 0;
   out_1751403695813404838[54] = 0;
   out_1751403695813404838[55] = 0;
   out_1751403695813404838[56] = 0;
   out_1751403695813404838[57] = 0;
   out_1751403695813404838[58] = 0;
   out_1751403695813404838[59] = 0;
   out_1751403695813404838[60] = 0;
   out_1751403695813404838[61] = 0;
   out_1751403695813404838[62] = 1;
   out_1751403695813404838[63] = 0;
   out_1751403695813404838[64] = 0;
   out_1751403695813404838[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7314429967761925320) {
  H(in_vec, out_7314429967761925320);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5063828239748852282) {
  err_fun(nom_x, delta_x, out_5063828239748852282);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3766884446287441611) {
  inv_err_fun(nom_x, true_x, out_3766884446287441611);
}
void live_H_mod_fun(double *state, double *out_5299362412229614450) {
  H_mod_fun(state, out_5299362412229614450);
}
void live_f_fun(double *state, double dt, double *out_6438217386767210752) {
  f_fun(state,  dt, out_6438217386767210752);
}
void live_F_fun(double *state, double dt, double *out_8711821868833026606) {
  F_fun(state,  dt, out_8711821868833026606);
}
void live_h_4(double *state, double *unused, double *out_6699434746503508921) {
  h_4(state, unused, out_6699434746503508921);
}
void live_H_4(double *state, double *unused, double *out_4765815366198060142) {
  H_4(state, unused, out_4765815366198060142);
}
void live_h_9(double *state, double *unused, double *out_2938772362047964784) {
  h_9(state, unused, out_2938772362047964784);
}
void live_H_9(double *state, double *unused, double *out_2521403569066387328) {
  H_9(state, unused, out_2521403569066387328);
}
void live_h_10(double *state, double *unused, double *out_572592492373180910) {
  h_10(state, unused, out_572592492373180910);
}
void live_H_10(double *state, double *unused, double *out_5831623508457838178) {
  H_10(state, unused, out_5831623508457838178);
}
void live_h_12(double *state, double *unused, double *out_6087461880107305338) {
  h_12(state, unused, out_6087461880107305338);
}
void live_H_12(double *state, double *unused, double *out_253641041833901653) {
  H_12(state, unused, out_253641041833901653);
}
void live_h_31(double *state, double *unused, double *out_6848381938966983359) {
  h_31(state, unused, out_6848381938966983359);
}
void live_H_31(double *state, double *unused, double *out_1399153308825452766) {
  H_31(state, unused, out_1399153308825452766);
}
void live_h_32(double *state, double *unused, double *out_5512723683214713035) {
  h_32(state, unused, out_5512723683214713035);
}
void live_H_32(double *state, double *unused, double *out_1267988523884712297) {
  H_32(state, unused, out_1267988523884712297);
}
void live_h_13(double *state, double *unused, double *out_8440708348654386059) {
  h_13(state, unused, out_8440708348654386059);
}
void live_H_13(double *state, double *unused, double *out_5914274422995110640) {
  H_13(state, unused, out_5914274422995110640);
}
void live_h_14(double *state, double *unused, double *out_2938772362047964784) {
  h_14(state, unused, out_2938772362047964784);
}
void live_H_14(double *state, double *unused, double *out_2521403569066387328) {
  H_14(state, unused, out_2521403569066387328);
}
void live_h_33(double *state, double *unused, double *out_3995606346095382009) {
  h_33(state, unused, out_3995606346095382009);
}
void live_H_33(double *state, double *unused, double *out_1751403695813404838) {
  H_33(state, unused, out_1751403695813404838);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
